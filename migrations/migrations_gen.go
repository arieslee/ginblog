// Code generated by go-bindata.
// sources:
// ../migrations/001_create_album.sql
// ../migrations/002_create_article.sql
// ../migrations/003_create_comment.sql
// ../migrations/004_create_user.sql
// ../migrations/005_create_user_profile.sql
// ../migrations/migrations_gen.go
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __001_create_albumSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x6b\xd4\x40\x18\xc6\xef\x81\x7c\x87\xf7\x96\x04\x53\x48\x94\x82\x58\x72\xd1\xf5\xd0\x8b\x17\xff\xe0\xad\xcc\x26\xef\xae\x43\x93\xc9\x32\x79\xa7\x6b\x6e\x8a\xd4\xa2\xb4\x88\xa0\xb6\xe0\xa5\x7a\x12\x14\x2b\x2a\x75\x41\xc1\x4f\x93\x64\x73\xf2\x2b\xc8\xe6\xcf\x26\x2e\x6b\xaf\x33\xcf\xef\x9d\xe7\x7d\xe6\xd9\xd8\x80\x4b\x11\x1f\x4b\x46\x08\x77\x27\xba\x16\xc8\x78\x02\xc4\x86\x21\x02\x1f\x01\x3e\xe4\x09\x25\xc0\xc2\xa1\x8a\xb6\x74\xcd\x97\xb8\xd0\xd5\xd7\xd5\xa1\xa9\x6b\x00\x00\x3c\x00\x2e\xc8\x74\x1d\x0b\x44\x4c\x20\x54\x18\x02\x53\x14\xef\x70\xe1\x4b\x8c\x50\x90\x5d\x0b\x89\x53\x88\xb0\xc7\xa4\xff\x80\x49\xf3\xf2\xe6\x66\x0f\x08\x70\xc4\x54\x48\x60\x18\xe0\xc7\xd1\x02\x02\x23\x7f\x73\x50\x7c\x3c\xcd\x4f\x0f\xca\xf7\x27\x46\x33\x63\xc2\x7d\x52\x72\x65\xca\x3a\xb8\x11\xb6\xdc\x2e\xa6\xd3\x58\x06\x49\x1f\x74\xd6\x93\xd9\xfe\xb7\xf2\xd5\xe7\xf9\xd9\x51\xcb\x26\x2a\x8a\x98\x4c\xff\xf7\x66\xa3\xaa\xf3\xe9\xb2\x68\x05\x4e\x6f\xf2\x8b\x97\xd9\xec\x49\x7e\x7c\x5e\x1e\x7f\x6f\xb1\x3d\x8e\x53\xa1\xa2\x8b\xb0\xf2\x64\x7f\x7e\xf6\x33\xff\xf4\x2e\x7f\xfd\x65\xe9\x89\x18\xa9\x04\x88\x8b\xb4\x22\x3b\xd0\xed\xc0\xe2\xf9\x79\xfe\xe8\xf1\x35\x70\xe6\x47\xcf\x8a\x0f\xbf\xff\xfc\x3a\x74\xb3\x1f\x5f\x6b\x17\xcb\x40\x25\xaf\x96\xdb\xc5\xd4\xe4\x81\xd5\xc5\x05\xdb\xb7\x06\x37\xef\xef\xdc\xb9\x71\xef\x36\x98\xd5\xd7\xd9\xcd\x8a\x76\xe3\xd9\xae\x4d\x58\xa0\x12\x2e\xc6\x30\x24\x89\xa8\x6b\x16\xa0\x18\x73\x81\xde\xb6\x10\xf1\xe0\xfa\x4a\x15\x3c\xf7\xca\xd2\xe9\x22\xcc\x04\xc9\x53\x34\xba\xda\x9a\xf6\x8c\xe2\xed\x2c\x7b\x7a\x68\x6c\xe9\x9a\xae\xf5\x0b\x3a\x88\xa7\xe2\x9f\x8a\xd6\xc5\xfc\x1b\x00\x00\xff\xff\x13\x36\xb6\x40\xc4\x02\x00\x00")

func _001_create_albumSqlBytes() ([]byte, error) {
	return bindataRead(
		__001_create_albumSql,
		"001_create_album.sql",
	)
}

func _001_create_albumSql() (*asset, error) {
	bytes, err := _001_create_albumSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "001_create_album.sql", size: 708, mode: os.FileMode(438), modTime: time.Unix(1538403570, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __002_create_articleSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x4f\x6b\x13\x51\x14\xc5\xf7\x03\xf3\x1d\xee\x6e\x26\x98\x42\xa2\x14\xd4\x92\x8d\xc6\x45\x41\x5c\xa8\x15\x77\xe5\x75\xe6\x26\x7d\xf4\xcd\x7b\xe1\xcd\x7d\x4d\xb3\xab\x48\x08\x8a\x45\x04\x6d\xbb\x70\x51\x75\x23\xf8\xa7\xa2\x52\x05\x15\xbf\x8c\x99\x24\x2b\xbf\x82\xcc\x9f\x97\x99\x4a\xd3\xed\x70\x7e\xf7\x9d\x7b\xe6\xdc\xa5\x25\xb8\x10\xf1\xae\x66\x84\xb0\xd6\x73\x9d\x50\xab\x1e\x10\xdb\x10\x08\xbc\x03\xb8\xc3\x63\x8a\x81\x69\xe2\x81\xc0\x15\xd7\x09\x34\xa6\xca\x5c\x50\x7c\xf6\x5d\x07\x00\x80\x87\xc0\x25\xf9\xcd\x46\x0d\xa4\x22\x90\x46\x08\x60\x86\xd4\x3a\x97\x81\xc6\x08\x25\xd5\x73\x21\x71\x12\x08\xdb\x4c\x07\x9b\x4c\xfb\x17\x97\x97\x2b\x40\x88\x1d\x66\x04\x81\xe7\x41\xa0\xa2\x14\x02\x2f\xd9\x1f\x4d\xde\x1d\x25\x47\xa3\xd9\xeb\x43\xaf\x98\x61\xb4\x38\x3d\xe1\x2c\x70\xed\xf6\x4d\xab\xdf\xc2\x41\x5f\xe9\x30\xae\x42\x8d\xb3\xa9\xf1\xf0\xcb\xec\xf9\xc7\xe9\xf1\x9e\x65\x63\x13\x45\x4c\x0f\x16\xbd\x57\xa8\x02\x25\x29\xe5\x85\x92\x5d\xc2\x1d\x2a\x77\x2a\x17\xf9\xf0\x26\xd9\x1f\x59\x80\x19\xda\x54\xba\x9c\xba\xc0\xce\x9f\x5f\x2f\xa7\xbb\xc3\xf9\x2b\x59\xfe\x65\xd2\x96\x68\x54\xfc\x3f\x7d\x36\xfe\xfe\x30\x39\x38\x99\x1d\x7c\xb5\xd8\x36\xc7\xbe\x34\xd1\x79\xd8\xec\x70\x38\x3d\xfe\x91\xbc\x7f\x95\xbc\xf8\x34\xdf\x9c\x18\x99\x18\x88\xcb\x41\x46\x96\x60\xb3\x04\x27\x8f\x4f\x92\xdd\x07\x57\xa1\x31\xdd\x7b\x34\x79\xfb\xfb\xef\xcf\x27\xcd\xf1\xb7\xcf\xb9\x0b\x3b\xa8\xa7\x79\x16\xe1\x16\x0e\x7c\x1e\xd6\xca\x9f\x02\xab\xb7\xda\x37\xee\xaf\xdf\xbd\x7e\xef\x8e\x9f\xf5\xa2\x5e\x6c\x58\x2f\x2c\xd7\x73\x0f\x35\x30\x31\x97\x5d\xd8\x20\x8d\xe8\x3a\x35\x40\xd9\xe5\x12\x5b\xab\x52\xaa\xf6\xb5\xff\x7a\xd6\xba\x74\x65\x6e\x34\xcd\x36\x46\x6a\x19\xea\x5c\xb6\x9e\x5b\x45\xa5\xbc\x15\xd7\x71\x9d\xea\x05\xb4\x55\x5f\x9e\xba\x01\xdb\xfc\x7f\x01\x00\x00\xff\xff\x34\x22\x68\xa8\x27\x03\x00\x00")

func _002_create_articleSqlBytes() ([]byte, error) {
	return bindataRead(
		__002_create_articleSql,
		"002_create_article.sql",
	)
}

func _002_create_articleSql() (*asset, error) {
	bytes, err := _002_create_articleSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "002_create_article.sql", size: 807, mode: os.FileMode(438), modTime: time.Unix(1538403584, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __003_create_commentSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd1\xb1\x4e\xf3\x30\x10\x07\xf0\x3d\x52\xde\xe1\xb6\x26\xfa\xbe\x4a\x09\x52\x05\x52\x95\x05\x75\xe1\x01\x98\x2b\xe3\x5c\xca\xa9\xce\x39\xb2\xcf\xd0\xbc\x03\x12\x0b\x6f\xc0\xcc\xc0\xd6\x01\x1e\xa7\x88\x8d\x57\x40\x21\x49\x29\xd0\xd5\xfe\x9d\x75\x7f\xff\xa7\x53\xf8\x57\xd3\xca\x29\x41\xb8\x6c\xe2\xa8\x74\xb6\x01\x51\x57\x06\x81\x2a\xc0\x0d\x79\xf1\xa0\x6d\x5d\x23\xcb\x3c\x8e\xb4\xc3\x4e\xf6\x60\x38\x4e\xe2\x08\x00\x80\x4a\x20\x96\x24\xcf\x52\x60\x2b\xc0\xc1\x18\x50\x41\xec\x92\x58\x3b\xec\xe0\xff\x1e\x2a\x27\xa4\x0d\x2e\x0f\x06\x4a\xac\x54\x30\xfd\xd0\xa0\x98\xf4\x9a\x55\x8d\x70\xa3\x9c\xbe\x56\x2e\xc9\x67\x47\x5d\x70\x66\x4f\x4e\x66\xc7\x8d\xb6\x2c\xc8\x02\x82\x9b\x71\x89\x3e\xc8\xdf\x0d\xb2\xe1\xde\x8b\x92\xe0\x41\x88\xdb\x2f\xf2\x2d\xf2\x31\x37\x4c\xb2\xdd\xf3\xfd\xfb\xc3\xeb\xc7\xcb\x5d\xfe\xf6\xf4\xb8\xdb\x6e\x27\xc3\x74\xe3\xa8\x56\xae\x85\x35\xb6\x09\x95\x69\x1c\xa5\xc8\x2b\x62\x2c\x2e\x98\xed\xe2\xfc\xd7\xbf\x14\xf9\xe9\xfe\xf5\x2e\x87\x47\x29\x82\x54\x67\xf3\x38\x3a\xac\x67\x61\x6f\x19\x7e\x34\x34\xf6\xf2\x19\x00\x00\xff\xff\x46\xa1\x8f\x52\xc5\x01\x00\x00")

func _003_create_commentSqlBytes() ([]byte, error) {
	return bindataRead(
		__003_create_commentSql,
		"003_create_comment.sql",
	)
}

func _003_create_commentSql() (*asset, error) {
	bytes, err := _003_create_commentSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "003_create_comment.sql", size: 453, mode: os.FileMode(438), modTime: time.Unix(1538403623, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __004_create_userSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x4b\x02\x41\x18\xc6\xef\x0b\xfb\x1d\xde\xdb\xae\x94\xa0\x92\x10\xc9\x5e\xc2\x4b\x1f\xa0\xb3\x4c\xbb\xef\xea\xd0\xee\xcc\x32\x33\x9b\x79\xcb\x8b\x44\x18\x15\x48\x5e\x83\x2e\x5e\x22\xa2\x30\x0f\xd6\xb7\xd9\xd5\x4e\x7d\x85\x58\xd7\xd5\x35\x04\xaf\x33\xcf\xef\x79\xff\x3d\xc5\x22\xec\xf9\xb4\x29\x88\x42\x38\x0d\x74\xcd\x11\x3c\x00\x45\xce\x3c\x04\xea\x02\x5e\x52\xa9\x24\x84\x12\x45\x4d\xd7\x6c\x81\x89\x2c\xfd\x4d\xde\x4c\x5d\x03\x00\xa0\x0e\x50\xa6\xcc\x72\xa9\x00\x8c\x2b\x60\xa1\xe7\x01\x09\x15\x6f\x50\x66\x0b\xf4\x91\xa9\xfd\x54\x18\xb4\x38\x43\xb8\x20\xc2\x6e\x11\x61\x56\xf2\x7a\x07\x5d\x12\x7a\x0a\x0c\x03\x6c\xee\x27\x0c\x18\xb3\xc1\x28\xbe\xfe\x8c\xee\x6f\x8d\x8c\x27\x52\xb6\xb9\x70\xd6\x16\xd5\xea\x0e\x8f\xe8\xb5\x37\x7b\xea\x66\x06\x49\xd3\x8d\x40\x70\x97\x7a\xd8\xc8\xb5\x9d\x91\x89\xcd\x52\x9a\x0e\xbb\x5d\xb2\xb6\x8f\xdf\x47\x51\xaf\x1f\x0f\xc7\x3f\xc3\x8f\xac\x88\xdd\x22\xac\xb9\x8b\x04\x63\x36\x7d\x9c\x7f\x3f\x6c\xa2\x52\x11\x15\xca\x05\x79\xb0\x65\xb0\x72\x6e\x37\x37\xe3\xf8\xaa\x7b\x04\xa5\xe8\xed\x6e\x3e\xf8\xfa\x9d\xf6\xcb\xf1\xcb\x73\x34\x99\xac\x76\x25\xa8\x4f\x44\x07\xce\xb1\x63\x52\xa7\xa0\x6b\x05\x64\x4d\xca\xd0\x3a\x61\x8c\xd7\x8f\xff\x1d\xc8\xaa\xac\x8a\x24\x8b\x95\xa8\xac\x50\xb9\x87\x59\x3d\x6b\x79\x0b\xa3\xa6\x6b\xba\x96\xcf\x4c\x9d\xb7\xd9\x46\x6a\x16\x59\xf9\x0b\x00\x00\xff\xff\xe2\xbd\xd5\xd4\x56\x02\x00\x00")

func _004_create_userSqlBytes() ([]byte, error) {
	return bindataRead(
		__004_create_userSql,
		"004_create_user.sql",
	)
}

func _004_create_userSql() (*asset, error) {
	bytes, err := _004_create_userSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "004_create_user.sql", size: 598, mode: os.FileMode(438), modTime: time.Unix(1538403764, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __005_create_user_profileSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xb1\x6a\xdb\x50\x14\x86\x77\x81\xde\xe1\x6c\x92\xa8\x0d\x96\xc1\x50\x30\x5a\x8a\x97\x3e\x40\x67\x73\x25\x1d\x59\x87\x5e\xdd\x2b\x8e\xae\x5a\x6b\x2b\x94\x82\xa1\x74\x33\x74\x49\xc8\xe4\x90\x2d\xc9\x94\xc1\xe4\x6d\x62\x2b\x8f\x11\x1c\x5b\x96\x1c\x0c\x21\xb3\xbe\xff\xd3\x07\xf7\xf4\xfb\xf0\x29\xa3\x19\x0b\x83\xf0\x2d\xb7\xad\x98\x75\x0e\x46\x84\x12\x81\x12\xc0\x39\x15\xa6\x80\xb2\x40\x9e\xe6\xac\x13\x92\x38\xb6\xad\x88\x71\x87\xef\xa9\xee\x37\xd7\xb6\x00\x00\x28\x06\x52\xc6\xf5\x07\x1e\x28\x6d\x40\x95\x52\x82\x28\x8d\x9e\x92\x8a\x18\x33\x54\xa6\xb7\x07\x19\x85\x54\x22\x43\xf8\x21\x38\x4a\x05\xbb\xfe\xc8\x83\x18\x13\x51\xca\xfd\xec\xc0\x15\x38\x07\x43\xaa\x7a\xb5\xb6\x84\x0f\x91\xce\x76\x3a\x70\x7c\x08\x75\xd5\x1b\xc0\x8c\x58\x3a\x87\x55\x48\x6c\xd2\xa3\x7a\xd8\xad\x69\x0c\x8e\xd3\x2a\xea\xe5\xd5\xf6\xff\xaa\x19\x63\x26\x48\x9e\x8c\xcf\x74\xe5\xa9\x56\x9d\xf8\xf3\x90\x88\x63\xc6\xa2\x68\x5d\xa3\xd1\x3b\x25\x9b\x8b\xbb\xcd\xe5\xaf\xa6\x24\xd5\x61\x58\x7d\x60\x5d\x2f\xee\x37\xab\xc7\x66\x4d\xca\xb0\x06\x83\x73\xd3\x12\x4f\xeb\xbf\xf5\xfa\x5f\x43\xe4\x4c\x99\xe0\x0a\xbe\x63\xe5\x52\xec\xd9\x96\x07\xa8\x66\xa4\x30\xf8\xaa\x94\x9e\x7c\x79\xf3\x74\xc1\xf0\xf8\xd7\x5d\x50\x81\x26\x28\x4d\xf2\xb9\xb1\x07\x4e\xbd\xbc\xd9\x2e\x1e\x9e\x6f\xaf\xb7\xbf\xff\x38\x63\xdb\xb2\xad\xee\x8d\x4d\xf4\x4f\x75\x72\x65\x27\xb7\xf5\x12\x00\x00\xff\xff\xad\x37\x25\x39\x8e\x02\x00\x00")

func _005_create_user_profileSqlBytes() ([]byte, error) {
	return bindataRead(
		__005_create_user_profileSql,
		"005_create_user_profile.sql",
	)
}

func _005_create_user_profileSql() (*asset, error) {
	bytes, err := _005_create_user_profileSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "005_create_user_profile.sql", size: 654, mode: os.FileMode(438), modTime: time.Unix(1538404234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations_genGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x99\x59\x6f\x63\x47\x92\x85\x9f\x79\x7f\xc5\xb5\x00\x1b\xe4\x40\x23\xdd\x7d\x11\x50\x2f\x5e\x06\xf0\xc3\xd8\xc0\xd8\xf3\xd4\xd9\x10\xee\x92\xa9\x26\x5a\x22\x65\x92\x72\x67\x55\xa1\xfe\x7b\xe3\x8b\x08\x4a\x2a\x15\x65\x1b\xd5\xf5\x40\x91\xbc\xcc\x25\x32\x96\x73\x4e\xa4\x2e\x2f\xd3\xef\xb6\xb3\x4f\x6f\xfc\xc6\xef\x86\x83\x9f\xd3\xf1\x6d\x7a\xb3\xfd\xef\x71\xbd\x99\x87\xc3\x70\x91\x5c\x5e\xa6\xfb\xed\xc3\x6e\xf2\xfb\x2b\x3e\x5f\x5c\x5c\xde\xad\x6f\x76\xc3\x61\xbd\xdd\xec\x2f\xb3\x2c\xbf\x9e\x76\x7e\x38\xf8\xeb\xe1\x76\x7c\xb8\xbb\xd8\xff\x76\x7b\x6a\x54\xf1\x38\x6a\x77\x58\x4f\xb7\xfe\xb5\x71\xe5\x71\xdc\xb4\xbd\xbb\xf3\x9b\xc3\x6b\xe3\xaa\xe3\xb8\x87\xbd\xdf\xbd\x36\xa8\x7e\x3e\xe8\xfa\x7e\xb7\x0d\xeb\xd7\x76\x7e\xfa\x78\x7d\xe3\x37\x17\x37\x5b\x86\x7c\xff\x73\xfa\xd3\xcf\xbf\xa6\x3f\x7c\xff\xe3\xaf\x5f\x25\xc9\xfd\x30\xfd\x73\xb8\xf1\xe9\xd3\xd0\x24\x59\xdf\xdd\x6f\x77\x87\x74\x99\x2c\xce\xc6\xb7\x07\xbf\x3f\x4b\x16\x67\xd3\xf6\xee\x7e\xe7\xf7\xfb\xcb\x9b\x77\xeb\x7b\x1e\x84\xbb\x03\x6f\xeb\xad\xfe\xbd\x5c\x6f\x1f\x0e\xeb\x5b\xbe\x6c\x65\xc2\xfd\x70\xf8\xc7\x25\xa6\xf1\x81\x07\xfb\xc3\x6e\xbd\xb9\x91\xdf\x0e\xeb\x3b\x7f\x96\xac\x92\x24\x3c\x6c\xa6\xd4\x62\xf2\x7f\x7e\x98\x97\x7c\x48\xff\xf6\x77\xb6\x3d\x4f\x37\xc3\x9d\x4f\x75\xda\x2a\x5d\x1e\x9f\xfa\xdd\x6e\xbb\x5b\xa5\xef\x93\xc5\xcd\x3b\xf9\x96\x5e\xbd\x49\xb1\xea\xe2\x27\xff\x2f\x16\xf1\xbb\xa5\x98\xcd\xf7\x6f\x1f\x42\xf0\x3b\x59\x76\xb5\x4a\x16\xeb\x20\x13\xbe\x7a\x93\x6e\xd6\xb7\x2c\xb1\xd8\xf9\xc3\xc3\x6e\xc3\xd7\xf3\x34\xdc\x1d\x2e\x7e\x60\xf5\xb0\x3c\x63\xa1\xf4\xeb\xdf\xae\xd2\xaf\x7f\x3f\x53\x4b\x64\xaf\x55\xb2\xf8\x90\x24\x8b\xdf\x87\x5d\x3a\x3e\x84\x54\xf7\xd1\x4d\x92\xc5\xb5\x9a\xf3\x26\x5d\x6f\x2f\xbe\xdb\xde\xbf\x5d\x7e\x33\x3e\x84\xf3\xf4\xe6\xdd\x2a\x59\x4c\xb7\x3f\x1c\x2d\xbd\xf8\xee\x76\xbb\xf7\xcb\x55\xf2\xa5\xec\x61\x19\x5d\xff\x95\x85\xfc\x6e\xa7\x76\xdb\xc3\xf1\x21\x5c\x7c\x8b\xe9\xcb\xd5\x39\x23\x92\x0f\x49\x72\x78\x7b\xef\xd3\x61\xbf\xf7\x07\x5c\xfe\x30\x1d\x58\x45\xce\x67\xf1\x48\x16\xeb\x4d\xd8\xa6\xe9\x76\x7f\xf1\x3f\xeb\x5b\xff\xe3\x26\x6c\x1f\xe7\x59\x08\x8f\xcf\x9f\xad\x20\x31\x4c\x53\x0b\x63\xb2\xd8\xaf\xdf\xc9\xf7\xf5\xe6\xd0\x54\xc9\xe2\x8e\x22\x4d\x1f\x17\xfd\xdf\xed\xec\xe5\xe1\xaf\xeb\x3b\x9f\x92\x26\x17\x7c\x62\x1f\x49\x95\x65\x58\xbf\xdc\x6b\x95\xfe\x34\xdc\xf9\xe5\xca\x76\x60\x4f\x3b\x65\x58\x5f\xb0\x7b\xf2\xe1\x0f\xe6\xfe\xb2\x7e\xc7\x5c\xb1\xe6\xe3\xa9\x18\xfa\x87\x53\xb1\x75\xb9\x7a\x6e\xf9\xc7\x0b\x70\xb4\x3f\x5b\x80\xc3\x2d\x57\x4f\x07\xfd\x64\x05\x3b\xfd\xeb\x8b\xfc\xb8\xff\x7e\xbd\x5b\xae\xd2\x71\xbb\xbd\x7d\x3e\x7b\xb8\xdd\xff\xc9\xc9\xdf\xee\xf5\xe0\x7e\x17\x86\xc9\xbf\xff\xf0\x6c\xb6\xa5\x04\x59\x7e\x7d\xfd\x12\x0c\x7f\xf9\xed\x36\x7d\x63\x39\xb1\x3c\x73\x31\x0f\x2e\x76\xa3\x8b\x59\xe7\x62\x96\x9d\x7e\x85\xe0\x62\x3b\xb9\xd8\x17\x2e\x56\xc1\xc5\x66\x74\x71\xae\x5c\xac\x32\x17\xf3\xce\xc5\xa9\x71\xd1\xb3\x4e\xae\xe3\xba\xd6\xc5\xd0\xba\xd8\x37\x2e\x66\x95\x8b\x75\xe9\x62\xd5\xb9\xd8\x57\x2e\x76\x85\x8b\x75\xe7\x62\x5b\xb8\x38\xe7\x2e\x86\xda\xc5\x39\x53\x1b\xf2\x56\xf7\xf2\x99\x8b\xc3\xec\xe2\x34\xb9\x58\xd8\xda\x83\x77\xb1\x2a\x5d\xec\x4b\x17\xa7\xde\xc5\xb2\x70\xb1\xed\x5d\x1c\x5a\xb5\xa7\xf1\x2e\x76\x83\xda\x35\x14\x2e\x8e\xec\xd5\xb9\x38\x64\x2e\x8e\x8d\xad\x59\xbb\xd8\x0e\x2e\xe6\x85\x8b\x79\xe5\x62\x31\xba\x58\x0c\x2e\xb6\xb5\x8b\x55\xee\xe2\x94\xeb\xf9\xd8\xa3\xa9\x5c\x6c\x4b\x17\x43\xa1\xe3\xa6\xce\x45\xdf\xb8\x38\x05\xb5\xa9\xf0\xba\xef\x10\x5c\x2c\x4b\x7d\x8e\x9d\xfd\xec\xa2\x6f\x5d\x6c\x67\x1d\x3f\xf7\x2e\xce\x9d\x8b\x5d\xe6\x62\xc5\x19\x73\xf5\x39\x9f\xab\x46\xfd\xde\xb6\x2e\x16\xad\x8b\x23\xb6\x35\xba\x57\x4b\x3c\x0a\x17\x27\xce\xc1\x7e\xb9\x7e\x67\x6e\x96\xbb\x58\x7a\x17\x7d\xe5\x62\xd6\xbb\x58\xd4\x2e\x4e\x99\x8b\x53\xe1\xe2\x90\xab\x1f\x38\x73\x5b\xb9\x38\xcd\x2e\xf6\xac\xdd\xa9\x9f\x67\xfc\xdd\xea\x3b\x63\x87\x5e\xcf\x71\x8c\x75\x39\xe9\x3b\xe7\x13\x3b\x2a\x17\xf3\xd9\xc5\x0c\x7b\x89\x39\x31\xc9\x5c\xac\x2b\x8d\x3d\x36\x11\x5f\xfc\xc9\xf9\xdb\xcc\x45\x9f\xeb\xf9\xba\xc9\xc5\x3a\x73\xb1\x67\xbc\xad\xd1\xf5\x3a\x9e\xd8\x8c\xd8\xdc\xba\x38\x54\x1a\x77\xf1\x51\xef\x62\x30\xbf\xe3\xbf\x06\x1f\x05\xf3\x53\xa6\xfe\x60\x6f\xf2\xa9\xb1\xfc\xf3\xb6\xce\x6c\x3e\xe2\x55\x94\x2e\xb6\x41\x63\x88\x0d\xe4\x25\x67\xc3\x1f\xc4\x98\x35\xa7\x41\xf3\x14\xdf\x13\x0b\xe2\xd8\x94\xea\x47\xe2\x57\x17\x9a\xa7\x4d\xad\x63\xcb\x41\xfd\x48\x0c\xf1\xef\x3c\xa9\x9f\x06\x3e\x97\x9a\xd7\x59\xa3\x67\x20\x4e\xf8\x6e\x6e\x34\x9f\xc8\x83\xe0\x5d\x1c\x5b\x3d\x1b\xfe\x27\x4f\x42\xaf\xbf\xd5\xe4\xdf\x68\xb9\x35\x68\x0c\xfb\x4e\xfd\x8d\x6f\xb0\x13\x5f\x0c\xa5\x8b\xc3\xa0\x3e\xf2\xbd\x8b\x23\xf6\xb1\x2f\x39\x4c\x4e\x06\x5d\x9f\x7a\x22\xee\xac\xed\x27\xb5\xa9\xf5\xea\x87\xda\xbb\x98\x7b\xf5\x0f\xe3\x47\xf2\x69\x76\xb1\xf3\x1a\x1b\xc9\x0b\x5b\x83\x18\xb1\x9e\xd4\x43\xd0\x35\x82\xf9\x4a\xec\xaa\xd4\x07\xfc\x16\x66\xf5\x15\x76\x11\x67\x62\x43\x7e\x65\x56\x8b\xb2\x1e\xe3\x0b\x17\xcb\x51\xf3\xd1\xcf\x9a\xbb\xbe\x50\x5f\xb4\xe6\x27\xdf\xb9\x18\xb0\xab\xb6\x9c\xc2\xaf\xad\xd6\x19\xbe\x21\x7e\x63\x30\x1b\x26\x8d\x0d\xfe\x1e\x4b\xf5\x7d\x6d\x38\x05\xa6\xe0\x57\xb0\x8a\x3a\xa1\x5e\xc1\xa5\x99\x9a\xae\x15\x2f\xa8\x23\xb0\x8b\x98\xf0\x0c\x5f\xf2\x3b\xb1\x22\x9e\x65\xab\xb9\xcd\x8b\x98\x8f\xd8\x99\xeb\xf7\xb2\xd1\x38\x3d\xd6\x55\xaf\x39\x86\x8d\x2d\xb8\x63\xb1\x17\xfc\x9a\x35\x47\xc0\x24\x30\x48\x6a\x8c\xf5\xb1\xad\x52\x9f\x0d\x9d\xd9\xdd\xd8\xb8\x4e\x73\x58\xec\xf3\x9a\x77\x79\xa6\xbe\x21\xef\xc3\xe0\x62\x05\x6e\xd4\x9a\xdf\xe4\x09\xb9\x3a\x17\x1a\x07\x7c\x0d\x8e\x12\x83\xc9\x6a\xaf\xac\x14\x6b\x66\x72\x6c\xd0\x78\x52\xab\xc4\x80\x78\x14\x93\x8b\xed\xa8\x58\x49\x6e\x35\x93\xae\xc5\x58\xce\x01\x66\x53\xcb\xf8\x5c\x30\xb6\xd5\xb9\xbd\xc5\x86\x9c\xc7\x8f\xc4\x25\x1f\x3f\xe6\x11\x5e\x79\xa9\x7e\xe3\x2c\x95\xd5\xb4\xd4\xad\x8c\x3b\x3b\x2a\xcb\x53\xdc\x65\xba\xe7\x94\x9e\x3c\xaa\xa3\x67\x7a\x34\x59\x2c\x4e\x32\xe0\x79\xb2\x58\x9c\x9d\x6a\x13\xce\xce\x93\xc5\xea\x51\xaf\x9c\x9a\xca\xde\xff\x25\x42\xeb\xf9\xde\xa2\xb4\x1e\xe5\xec\x1f\x18\xfe\x67\xa2\xf1\x51\xeb\x89\x5a\xbb\x7a\xf3\x92\xf9\xdf\xa3\x89\xae\xd2\x57\x8c\x4f\x91\x3d\x57\x69\x9b\x75\xe7\x29\x02\xe6\xea\xb9\xbe\x59\x56\x65\xb7\x92\xe7\xc8\x92\x2b\x95\x2d\xff\xbf\x59\xc7\x65\x5e\x97\x5d\x95\x95\x75\x9b\x9d\xa7\xd9\xea\x43\xb2\x18\xd8\xf9\x1b\x39\xe5\x7b\x39\xda\x55\x6a\x27\xc4\xac\x2b\xf9\xfb\xe1\xd1\xe3\xc3\xf9\x4b\xc9\xf1\xb2\xb3\xfa\x8f\x44\x47\xf9\x24\x3a\x48\x1c\x80\x12\xb2\x91\x04\xa3\x40\x4b\x05\x43\x48\xca\x7b\x15\x02\x85\x15\x65\x55\x28\x90\x31\x9e\x42\x47\xc0\x74\xb3\x16\x5d\x65\xa4\x5f\x4f\x5a\x74\x14\x10\x44\xec\x6b\x15\x04\x00\x0e\xeb\x40\x04\xc1\x88\x94\xa2\x80\xdc\xe4\xf3\xac\x05\x0d\xe0\x0c\xa3\x12\x12\xe7\xa1\x00\x58\x9b\x82\x6b\xf8\x7d\x54\x00\xc3\x6e\xd6\x85\x98\x82\x15\x0d\xb6\x41\x32\x00\x0e\xfb\x03\x68\x14\x62\xdf\x2b\x20\x20\x3c\xe4\x99\x15\x31\x05\x06\xa8\xf3\x3b\x45\x0f\xe9\x50\xb0\xac\x2f\xc0\xdc\xaa\x00\x11\x3b\x8d\xa0\x10\x3d\x00\x9f\x10\x97\x01\x07\x45\x0c\x99\x74\x95\x02\x3c\x05\x0b\xc8\x30\x17\xb2\xe4\x3c\x10\x04\xe3\x01\x42\xde\x39\xdb\x38\xa9\xbf\x59\x6b\x32\xb2\xe4\xbc\x80\x53\xd3\x2b\x08\xf0\x19\x40\xcf\x0d\x10\x11\x28\x00\x0e\x24\x09\x30\xd5\xd3\x13\x21\x03\x3c\x22\x0c\x5a\x8d\x39\x02\x00\xf1\x38\x19\x58\x07\x03\x53\x11\x4a\xb3\x0a\x05\x00\x0d\x41\x71\x14\x4f\x88\x00\x04\x12\xf1\x05\x90\xf0\x8f\xd8\x60\xbf\xb3\x0e\xe0\xcc\xf9\x10\x51\x00\x37\xe0\xcb\x6f\x9c\x0d\x82\x65\xff\xde\x3e\x07\x23\x8d\xde\x5e\x85\x91\x07\x40\x47\x8e\x35\x26\x6a\xd9\x03\x02\x27\x87\x00\xea\x63\x9e\x89\xf8\x08\x0a\xfa\x22\xf4\x66\x05\x6e\xe6\x62\x0b\x24\x36\x18\x29\xf8\x51\x45\xad\x90\x12\x67\xc9\x95\x20\xcb\x4e\x09\x99\x5c\x13\x30\x36\xa2\xc4\x5f\xac\x47\x7c\xe6\xa0\x42\x45\x72\x38\x28\x40\x43\x24\x42\x34\x96\xe7\x92\x9b\xbd\xc6\x3c\x64\x4a\x84\x88\x01\xf1\x6b\xab\x73\xf8\xad\xf7\x4a\xdc\xc4\x93\x1a\x93\xda\x98\x94\x64\x21\xa2\x91\xbc\x68\xb5\x4e\xe4\x7c\xe4\x54\xaf\xb5\xd2\xd5\x5a\x57\xc4\x11\x7b\xe4\x9c\x83\x89\xda\xc1\x44\x7d\xaf\xfb\x17\xcd\x93\x5f\xea\x5e\xe3\x9d\xf7\x4a\x44\xb5\x91\x52\x3f\xe9\xbb\x08\x5a\xaf\x39\xcf\xf9\xf0\x29\x35\x43\x3d\x91\x7b\xac\x49\x6c\x6a\x13\x0c\xd8\x0f\xe9\x41\xee\x90\x16\xeb\x89\x30\x08\x5a\xab\x10\x0e\xe3\x78\xe1\xa7\xb2\x57\x3f\x53\x4b\xd8\x4c\x3e\x8e\xb5\x8a\x75\xc6\xe2\x9f\xd1\x6b\xee\x22\x2c\x5b\x13\xf2\xde\xe2\x71\x8c\x11\xeb\xf5\xb9\xd6\x06\x22\xa8\xaf\xf5\x33\x35\x2e\x73\x83\x9e\x29\x3f\xee\xd5\x69\x2e\x89\x28\xc9\x35\x8f\xc5\xe6\x4c\xe3\x45\x6e\x21\x48\xbb\x60\xcd\x08\x62\xd1\x6a\x44\x62\x80\x28\xca\xf5\x19\x75\xce\x1e\x22\x9a\x46\x7d\x21\x4a\xa4\x49\x69\xb5\x76\x88\xef\x68\xc2\x09\xe1\x22\xc4\x3d\x6a\x2c\xf1\x27\x73\x89\x31\xb9\xc6\x7b\x66\x22\x91\xfa\x9f\xad\x66\x89\x01\x71\x1f\x4c\x14\x11\x2f\x11\x45\x5e\x73\x97\x33\x92\x23\x60\x90\x34\x82\x16\x37\x84\x82\x60\x9c\x57\x11\x81\xf8\x21\x8e\xe4\x34\xd8\x40\x4d\x92\x63\x88\x3c\x89\x49\xae\x35\x47\x2e\xe1\x6b\x1a\x0d\xf2\x18\x31\x48\x6d\x33\x8e\x5a\x9c\x2d\xf7\xa8\xe3\x7a\x54\xbb\xc0\xd1\xc1\xc4\x0c\x71\x14\xfe\x30\x31\x32\x9a\x38\x94\x1c\xb7\x98\x4e\x96\x13\xf8\xbf\x19\x34\x0f\xbd\xe1\x13\xc2\x84\x9a\x60\x6d\x6a\x61\xb0\x98\x1e\x31\x0d\x0c\x91\x46\x6f\x50\xec\xa6\x66\xeb\x5a\xf3\x94\x79\xec\x47\x93\x06\xbe\x04\xcb\x0b\xbe\xbf\x14\x42\xa5\xe1\x19\xf9\x4a\x3c\x0a\xe3\xb3\x4f\x85\xd0\x09\x46\xfd\x2c\x29\x74\x62\x1d\x13\x43\xa7\x6e\x43\x3f\x91\x43\x27\xa6\xff\x45\x41\xf4\xfa\x01\xbe\x9c\x24\x3a\x7d\x04\x13\x45\x5d\xd6\x7e\x96\x28\xea\xaa\x2f\x24\x8a\x5e\x5e\x23\x7f\xae\x28\xa2\x90\x00\x24\xba\x36\x3a\x3e\xc4\x0f\xc5\x23\x24\xdd\x2a\xd0\x96\xd6\xbd\x42\x3c\xde\xba\x55\xc0\x97\x6e\x01\x50\x43\x3c\x40\xcc\x47\xf1\xc1\x7b\x6f\x9d\x8f\x88\x9f\x5c\x13\x16\x52\x02\x64\xe9\x62\x28\x0c\xc0\x00\x42\x01\x98\x4b\xeb\x3e\x01\x16\x3a\xb9\xa3\x38\x10\x72\x1d\xb5\xb3\x14\x10\x9f\xf4\x9d\x42\x64\x4d\x80\x05\xe0\x91\x8e\xd0\x88\x45\xba\xb3\x5c\xbb\x54\x88\xe5\x78\x53\x21\xe0\x3a\xab\x4d\xad\x15\x0d\x73\x6b\x13\x51\xcc\x45\x04\x61\x17\xf3\x00\xd4\xf1\xd8\xb1\x14\x5a\x54\xd2\x15\xda\xde\x88\xb0\xda\xba\x3a\x08\xbc\x30\xa2\x41\x5c\xb4\x46\x86\x90\x39\xc2\x0d\x10\x42\xac\x01\xd4\x74\x56\x80\x1a\x85\x0e\xf9\x54\xd6\x05\x37\x46\x04\x7c\xf7\xc5\x53\xec\xe4\x26\x63\x50\x00\x03\xdc\x11\x73\xf8\x09\x3f\x33\x47\x6e\x94\x32\xbd\x71\x82\x10\x10\x44\xd8\xee\xed\x96\x0d\xa0\x2c\x8d\xac\xbd\xc5\x1d\xbf\x61\x6f\x61\x37\x26\xd8\x4c\x07\x29\xb7\x23\x8d\xee\x37\x4c\x4a\x7c\xe4\x03\xdd\x38\x7e\xe4\x3c\xc4\x11\x11\x4b\x07\x07\x50\x75\x26\x1a\x11\x22\x42\xb8\x80\x9d\xdd\x6a\xd1\x25\x36\xad\x0a\x95\xda\xc6\x21\x7a\x20\xa3\xca\x84\x23\xe4\x28\x02\xa3\x51\x30\x9f\x4c\x18\x20\x54\x11\x52\x00\x24\xdd\x6c\x69\xb7\x48\x10\x04\xf6\x92\x2f\xde\x3a\x59\xb9\xa1\x28\xf4\x7c\x9c\xbd\x33\x41\x56\xd8\x0d\x46\x31\xeb\x3b\xa4\x00\xd9\x20\x48\x46\x23\x43\xb9\x21\x9a\x95\xf0\x88\x07\x42\x6a\xb2\x4e\xbf\x36\x52\x26\x3e\x9c\x79\xb4\x75\xa5\x31\x68\x75\x3c\x39\x41\x4e\x93\x1f\x9c\x1b\xd1\x84\x90\x81\x60\x24\x57\x7a\xad\x07\x44\x6d\x6e\x22\x7a\xb2\x5a\x68\x0a\x3d\x33\xbe\xc2\xaf\x08\x33\xb9\xbd\x30\x52\x43\xb0\x23\x04\x11\x28\xde\xc4\x09\x44\xc8\xf8\xce\xfc\x4a\xae\xca\x4d\x68\xa5\xbe\x96\x1a\x36\x92\x23\x86\x3c\x43\x0c\x52\x43\xb9\xdd\xdc\x40\x16\xbc\xe4\x5c\x85\x3e\x7f\x49\x28\x90\x99\xdc\x00\x5a\xae\xc9\x6d\x46\x7e\x8a\x50\x4e\xa0\xd1\x67\x11\xca\x89\x75\x8c\x50\x4e\xfd\xdb\xec\x13\x42\x39\x31\xfd\x2f\x12\xca\xeb\x07\xf8\x72\x84\x72\xfa\x08\x46\x28\x55\x5d\x7e\x0e\xa1\x34\x45\xf9\x85\x08\xe5\xa3\xff\x37\x7e\x2e\x9b\x74\xd5\xd3\xbd\x7e\x35\x6a\x15\x57\xf9\xc7\xf7\xfa\x99\x49\xcb\xdc\x5a\x19\xaa\x89\x8a\xe9\x2b\x43\x97\x42\xd9\x47\xee\x97\xbc\xb5\x25\xa3\xda\x30\x98\xac\x95\xea\x35\x79\x8a\x6c\x92\xbb\x3f\xaf\xec\x50\x16\x7a\x9f\x28\xc8\xd1\x6b\x15\x77\x76\xdf\x9c\x5b\x6b\x4e\x7b\xcd\xda\x5d\xa9\x95\xc4\xe7\xc2\xda\x7b\xd0\x0e\x14\x14\xa9\x67\x77\x70\xb3\xdd\x87\x22\xfd\xa9\x6c\x10\xf5\x78\xef\x5d\x5a\x7b\xfe\xf2\xee\x5e\x18\x20\x28\x7b\x52\x39\xac\x7f\x6c\x97\xe4\xde\xb2\x57\x94\xa2\xbd\xa2\x5a\x85\x35\x4c\x4a\xe6\xf9\xd3\xdd\x39\x92\x51\x18\xd2\xee\xdd\x44\x26\x9a\x0c\x16\x99\x6a\xed\x3d\xbe\x87\x2d\xa5\xdd\x9a\xd5\x3e\x98\xab\x33\xf4\x04\x65\xc2\xfc\xd4\x42\xe2\x43\x69\x97\x4d\x22\xe2\x5b\xe4\xba\xb4\xec\x8d\xfa\xb2\xb5\xf5\x85\x85\x26\x43\xac\x4c\x51\x81\x76\x55\xd0\xa0\x57\x9f\x82\x2e\xb5\xa1\xbb\xc4\xb8\xd2\x56\x46\x5a\xc6\xf9\xe9\x8e\xff\xd8\x92\x56\xd6\xfa\x17\xf6\xbf\x06\x10\x95\x73\x83\x54\xb5\xa1\x12\x92\x3b\x33\xe6\xc8\x8f\xdf\x79\x99\x3a\x10\x66\x36\x24\xce\xac\x2d\x22\x3f\x60\xc2\xa2\x53\x26\x0a\xff\x0e\x00\x00\xff\xff\xea\xeb\x79\x1a\x00\x20\x00\x00")

func migrations_genGoBytes() ([]byte, error) {
	return bindataRead(
		_migrations_genGo,
		"migrations_gen.go",
	)
}

func migrations_genGo() (*asset, error) {
	bytes, err := migrations_genGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations_gen.go", size: 20480, mode: os.FileMode(438), modTime: time.Unix(1538404240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"001_create_album.sql": _001_create_albumSql,
	"002_create_article.sql": _002_create_articleSql,
	"003_create_comment.sql": _003_create_commentSql,
	"004_create_user.sql": _004_create_userSql,
	"005_create_user_profile.sql": _005_create_user_profileSql,
	"migrations_gen.go": migrations_genGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"001_create_album.sql": &bintree{_001_create_albumSql, map[string]*bintree{}},
	"002_create_article.sql": &bintree{_002_create_articleSql, map[string]*bintree{}},
	"003_create_comment.sql": &bintree{_003_create_commentSql, map[string]*bintree{}},
	"004_create_user.sql": &bintree{_004_create_userSql, map[string]*bintree{}},
	"005_create_user_profile.sql": &bintree{_005_create_user_profileSql, map[string]*bintree{}},
	"migrations_gen.go": &bintree{migrations_genGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

