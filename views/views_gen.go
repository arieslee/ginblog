// Code generated by go-bindata.
// sources:
// ../views/.DS_Store
// ../views/404.tpl
// ../views/about.tpl
// ../views/album-upload.tpl
// ../views/album.tpl
// ../views/article-detail.tpl
// ../views/article-form.tpl
// ../views/article.tpl
// ../views/inc/foot.tpl
// ../views/inc/head.tpl
// ../views/inc/meta.tpl
// ../views/login.tpl
// DO NOT EDIT!

package views

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\x4f\x4a\xc3\x40\x14\x87\xbf\x49\x03\x46\xeb\x22\xb8\x72\x99\xa5\x9b\x8a\x42\x0f\x10\x4a\x15\xdc\xea\x05\x4c\xda\x2a\x85\x68\xa4\x24\xe0\xb2\xc7\xe8\xa1\x3c\x80\xa7\xf0\x08\x2a\x93\xbc\xd2\xb4\xcd\xb8\x13\x6b\x79\x1f\x94\x6f\xd1\xf9\xcd\xbf\x90\x97\x19\xc0\x0c\xca\xf1\x25\x84\x40\x40\x6d\xff\x88\x56\x02\xf9\x6d\xe1\x89\x6d\xce\x54\x7d\x14\xbc\x90\xdd\x64\xf9\x28\xcd\xda\xfb\x52\x14\x65\x87\xb0\xef\xee\x01\x7d\x2e\xe8\x73\xde\x7c\x7f\xf3\x54\xca\xc2\x35\x70\xf6\x55\x51\x25\x0e\x49\x48\xc9\x29\x29\xda\x13\xe6\x1d\x58\x34\x12\x21\x09\x19\x29\x25\x4f\xf4\x28\x6d\x82\x9c\x84\xb1\x23\x7f\x6b\x47\x04\x8e\x1b\x23\x2e\xf3\xce\x39\x1a\x5b\xa2\x7c\x49\x9c\x90\x30\xa3\x60\xca\x88\x8c\x09\x3d\xc6\x4c\x28\x48\x98\x92\x39\xfa\x78\xdb\x58\x67\xb8\xd5\xc7\x03\x39\x33\xe7\x1c\x3e\x81\x0f\xa0\x2b\xf9\xee\x46\xde\xbd\x57\x76\xad\x1d\x49\x75\x98\xf2\xcc\xa8\xe5\x19\x2c\xd6\x9e\x81\x6d\x65\xd7\xf4\xfa\xc3\x6a\xd6\x13\x76\xcf\x1f\xab\x9c\x7b\xd7\x17\xb6\x92\x4b\x42\xd9\x77\x4c\xad\xa0\xfb\xd7\x13\x51\x14\x65\xe7\xb0\xf5\x21\x12\xc7\xe2\x79\x6d\x23\xff\x7b\x62\xbf\x91\x09\xc5\x91\x38\x16\xcf\x6b\x1b\x69\xe7\x89\x7d\x71\x20\x0e\xc5\x91\x38\x16\xcf\x6b\x4b\xd1\x32\x72\xf9\x30\x32\xb2\x91\x1b\x8a\x09\xc5\x91\x38\xfe\x9d\xbd\x51\x94\xff\x4e\xa7\x56\x68\xbf\xff\x57\xee\xfb\xbf\xa2\x28\x7b\x8c\xf1\x87\x77\xc3\xc1\xea\x42\xb0\x85\x27\x07\x81\xfb\x65\xc0\x71\x10\x90\xb6\xf6\x53\x7c\xca\xaa\xad\x1e\x04\x14\x65\xc7\xf8\x0e\x00\x00\xff\xff\xef\xca\xc5\xc4\x04\x18\x00\x00")

func Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_Ds_store,
		".DS_Store",
	)
}

func Ds_store() (*asset, error) {
	bytes, err := Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".DS_Store", size: 6148, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __404Tpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\x3d\x6f\x13\x41\x10\xed\xef\x57\x2c\x5b\xc7\x59\x2c\xa5\xa0\xd8\xdd\x86\x8f\x16\x8a\x50\x50\x8e\xef\x86\xdc\xc2\xde\xee\x69\x77\x6c\xc7\x5d\x40\x20\x45\x0a\x1f\x0d\x0a\x1f\x32\x52\x82\x10\xa2\x21\x12\x48\x11\x48\x24\xe2\xc7\x90\xc3\xbe\x2a\x7f\x01\xad\x63\x8c\x13\xa5\x9a\x99\xf7\xde\xbd\x99\x7b\x5a\x79\xe5\xc6\xed\xeb\xeb\xf7\xee\xdc\x64\x25\x55\x56\x67\x32\x15\x66\xc1\x6d\x28\x8e\x8e\x27\x00\xa1\xd0\x99\xac\x90\x80\xe5\x25\x84\x88\xa4\xf8\xdd\xf5\x5b\x9d\x6b\x89\x25\x43\x16\xf5\xda\xd5\x35\x29\xce\xda\xb9\xd2\x41\x85\x8a\x0f\x0c\x0e\x6b\x1f\x88\xb3\xdc\x3b\x42\x47\x8a\x0f\x4d\x41\xa5\x2a\x70\x60\x72\xec\xcc\x86\x15\x66\x9c\x21\x03\xb6\x13\x73\xb0\xa8\xba\x2b\xac\x82\x4d\x53\xf5\xab\xff\x40\x3f\x62\x98\x4d\xd0\xb3\xa8\x9c\x4f\xab\xad\x71\x0f\x59\x40\xab\x78\xa4\x91\xc5\x58\x22\x12\x67\x34\xaa\x51\x71\xc2\x4d\x12\x79\x8c\x9c\x95\x01\xef\x2b\x2e\x22\x01\x99\x3c\x41\xa2\xe7\x3d\x45\x0a\x50\xaf\x56\xc6\xad\x26\x91\xce\xa4\x98\xff\x66\xcf\x17\x23\x9d\xc9\xc2\x0c\x58\x6e\x21\x46\xc5\xd3\xe5\x60\x1c\x06\xae\x33\xc6\x96\x99\xe0\x87\x33\xec\x3c\x7a\x5e\x7f\x91\xad\x61\x03\x3b\x69\xd7\x12\xcf\x98\x2c\xbb\x29\xc3\x76\xff\xb0\x7d\xff\x41\x8a\xb2\xbb\xf8\x54\x14\x66\x70\x99\xcf\x83\x7e\xd5\xf3\x14\xbc\x5b\x76\xa9\xf5\xc9\xf1\xde\xf4\xe0\x57\xfb\xfa\x60\xf2\xee\xc9\x99\xdb\xc9\x8f\xe7\xcd\x97\x37\xcd\xf8\xf3\xe9\xd1\xb3\x3f\xdb\xbb\xd3\xad\xa7\xcd\xf7\x6f\xcd\xd7\x97\xd3\x57\xc7\xcd\xf6\x5e\xfb\xf6\xe3\xe9\xd1\xa3\xe6\xc5\x4f\x09\xff\x92\xe2\xba\xfd\xb4\xdb\xee\x1f\x4a\x01\x7a\x32\xde\x99\x8c\x77\x7e\x6f\x3d\x96\xa2\xbe\xe4\xa4\x45\x3b\x6f\x16\x65\x9e\xa2\x58\x7a\x53\xfa\x6f\x00\x00\x00\xff\xff\xa9\xe5\x68\x68\x6a\x02\x00\x00")

func _404TplBytes() ([]byte, error) {
	return bindataRead(
		__404Tpl,
		"404.tpl",
	)
}

func _404Tpl() (*asset, error) {
	bytes, err := _404TplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "404.tpl", size: 618, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _aboutTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4f\x6b\xd4\x40\x18\xc6\xef\xf9\x14\xe3\xdc\x77\x43\x6f\x1e\x66\x03\xfe\xa9\xe8\x41\x2c\xb6\x1e\x3c\x4e\x92\xb7\xc9\xc8\x64\x26\x4c\xc6\x6a\x19\x06\x54\x14\x85\x22\x45\xd8\x43\x1b\x2d\x3d\x89\xb7\x6e\x45\x94\xb2\xbb\xd0\x2f\xb3\xd9\xac\xa7\xfd\x0a\x92\xdd\x25\x9b\x35\x0a\x81\x19\xde\xe7\xf7\x3c\xef\x1b\xf2\x86\xdc\xb8\xfb\xe8\xce\xde\xd3\x9d\x6d\x14\xeb\x84\x7b\x0e\xa9\x0e\xc4\xa9\x88\x7a\x18\x04\xae\x0a\x40\x43\xcf\x21\x09\x68\x8a\x82\x98\xaa\x0c\x74\x0f\x3f\xd9\xbb\xd7\xb9\x59\xa9\x9a\x69\x0e\x9e\x31\xdd\x54\xc9\xee\x63\xa0\x5c\xd0\x04\xac\xed\x18\x13\x48\xb1\xcf\x22\x84\x77\xb5\x62\x22\xc2\x08\x47\x5c\xfa\x94\x2f\x0c\x18\x61\x6c\x2d\x71\x97\x6e\xc7\x18\x0d\x49\xca\xa9\x06\x84\x99\x08\xdc\xaa\x57\x57\xa7\x1c\xa3\xae\xb5\x0e\x71\x57\x23\xf8\x32\x3c\x6c\xc3\x95\xd8\x80\x43\x76\x80\x02\x4e\xb3\xac\x87\x03\x29\x34\x65\x02\x14\xf6\x1c\x84\x9a\x8a\x92\x2f\x16\xb5\xcd\xea\x26\xff\xb7\x9a\xd2\x08\x3a\x55\xb3\x86\x8e\x10\x89\xb7\xda\x6f\x4f\xdc\x78\xab\x8e\x70\x43\x76\xf0\xaf\xbc\x67\xcf\x13\x5f\x6a\x25\x45\x33\x2d\xf5\x8c\x61\xfb\x68\x91\xb7\x0b\x2f\xad\x9d\xfd\x7a\x57\x0e\xbf\x3d\xa4\xc2\x18\xe0\x19\x58\x5b\x5c\x1e\x57\xcf\xd7\x1f\x65\xff\xdc\x18\x10\x61\xd5\x2e\xdd\x88\x28\xde\x0f\xcb\xfe\xf9\x7c\x9c\xaf\x06\xbb\xcd\x94\x8e\xdb\xd8\xef\x37\x17\xe5\xc5\xf7\xe9\xc9\x60\x4d\x6e\x27\x94\xf1\x36\x39\xbb\x3e\x9d\x9e\x0c\xa6\x1f\x3e\x95\xf9\xdb\xb2\xff\x73\x36\x38\x9b\x8f\x73\xb4\xf2\xec\xc4\x52\x40\xdb\xb3\xa4\x8b\x2f\x97\xc5\xd9\xab\x06\x7d\x2b\x0c\x15\x64\x59\x9b\x2f\x47\xc7\xc5\xd5\xd5\x64\x9c\x17\xaf\xf3\xd9\xf5\xe9\x64\xf8\x79\x32\x3c\x5a\x4f\x76\x5f\xfa\xfe\xe1\xff\xba\x4c\x46\x47\xe5\xe8\xe3\x7c\x9c\x93\x54\xd5\xcb\xf8\x40\x68\x25\x17\x0e\x05\x5e\xc3\xd7\xf8\x20\xf5\x75\x75\xa9\x8f\xe5\xa6\x11\x77\xf9\x4f\xfc\x09\x00\x00\xff\xff\xed\xbc\x2b\xbb\x24\x03\x00\x00")

func aboutTplBytes() ([]byte, error) {
	return bindataRead(
		_aboutTpl,
		"about.tpl",
	)
}

func aboutTpl() (*asset, error) {
	bytes, err := aboutTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "about.tpl", size: 804, mode: os.FileMode(436), modTime: time.Unix(1541993826, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _albumUploadTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x3f\x8f\xeb\x44\x10\xaf\xe3\x4f\xb1\x0c\x4f\x4a\x22\x3d\x67\xa5\x57\xa1\x77\xb6\x9b\x83\xeb\x10\x48\xdc\x15\x08\x51\x4c\xec\xb1\xbd\x66\xbd\xbb\xda\x1d\x27\x97\x8b\x22\xd1\xa1\x83\x8f\x40\x43\x4b\x45\x09\x05\xe2\xd3\x1c\xff\xbe\x05\xf2\x3a\x39\xe5\x8e\x06\xe9\xc4\xab\xc6\x9e\xf9\xed\xfc\x7e\x3b\x33\x3b\xd9\x7b\x1f\x7e\x72\x79\xfd\xf9\xa7\x1f\x89\x96\x7b\x5d\x24\xd9\x68\x84\x46\xd3\xe4\x40\x06\x46\x07\x61\x55\x24\x59\x4f\x8c\xa2\x6c\xd1\x07\xe2\x1c\x6e\xae\xaf\xd2\x0f\xc6\x28\x2b\xd6\x54\xfc\xfe\xfd\x6f\x7f\xde\x7f\xf3\xf0\xcb\xb7\x0f\xbf\xfe\x90\xee\xf7\xa5\x35\xb5\x6a\x04\x7c\xc6\x5e\x99\x06\x04\x34\xda\xae\x51\x47\x2c\x08\x80\xc3\x21\x93\xd3\xc1\x64\xbf\x67\xea\x9d\x46\x26\x01\xca\x94\x72\xa4\x59\xb1\xd3\x20\x56\x87\x43\x92\x69\x65\xbe\x12\xad\xa7\x3a\x07\x19\x18\x59\x95\xb2\x0b\x72\x6d\x2d\x07\xf6\xe8\xd2\x5a\x69\x52\xc6\x0d\x9c\xf6\x18\x98\xbc\x2c\x43\x90\x8f\xce\x55\xaf\xcc\xaa\x0c\x01\x44\x4f\x95\xc2\x1c\x50\x6b\x10\x9e\x74\x0e\x81\x77\x9a\x42\x4b\xc4\x20\x78\xe7\x28\x07\xa6\x5b\x96\x11\x2c\x8b\x24\x93\xc7\x6b\xaf\x6d\xb5\xfb\xb7\xca\x31\x78\xa6\xb2\x52\x1b\x51\x6a\x0c\x21\x87\xd2\x1a\x46\x65\xc8\x43\x91\x08\x71\x1e\xf1\x76\x1b\x7d\x42\x64\xb5\xf5\xbd\xe8\x89\x5b\x5b\xe5\xe0\x6c\x60\x10\x58\xb2\xb2\x26\x07\x39\x38\x6d\xb1\xea\x07\xcd\x0a\x04\x99\x72\x12\x17\xff\x1d\x7a\x96\xe3\xd9\xb4\x42\x46\x10\x42\x55\x39\x4c\xf8\x8f\xc7\x78\x3a\xc6\x8e\x1c\xe2\x29\xf9\xd6\xa3\x73\xe4\xc5\x78\xc9\xb4\x24\xc3\x51\xe0\x09\x39\xc1\xdb\x37\xc5\x5f\x3f\xfd\xfc\xf7\xd7\xf7\x7f\x7c\xf7\xe3\xd4\xd0\x4c\xb6\x6f\x8a\x64\x36\x9b\x65\xb1\x9c\x91\x0f\xf5\x7a\xe8\x6f\x22\x29\x08\x83\x3d\x9d\x24\x5c\x29\x4d\xe1\x54\xcc\xb1\x05\x20\x26\xd5\x9a\x4e\x2a\x46\x6f\x3a\x62\xe3\x54\x8c\x97\x48\x51\x6b\xbb\xa5\x2a\x36\x32\xa5\x5b\x26\x13\x94\x35\x21\x9f\x7f\x01\x9d\x6b\xe0\xb5\x80\xce\x51\xb4\xce\x44\xd3\xa8\x1a\xbe\x9c\x9f\x69\xcf\x64\xa5\x36\xc7\xc2\xc6\xea\xc4\xc2\x4f\xce\xa3\x79\xde\xbe\xda\x5a\x3e\x6b\x5f\x28\xbd\x72\x2c\x82\x2f\xff\xeb\x94\x75\x41\x3a\x3d\x34\xca\x04\x59\xa2\xd9\x60\x48\xd9\xa6\x6b\x6d\xd7\x71\xe2\xba\xf0\x64\xa6\x3a\xdc\xe0\x44\x01\x45\x26\xa7\xaf\xe2\x85\xac\xc1\x7a\xc6\xb5\xa6\x77\xc5\xe7\x06\xaf\xea\xdd\xff\xcd\xf6\xf4\xe1\x76\xe1\x85\x19\xb9\xa5\x9e\x82\xac\x51\xd6\xf8\xf2\x6c\x5d\x90\xda\x96\xa8\x29\xc8\xbb\xf6\x59\xba\x53\xbe\x22\x79\xb5\xa8\x07\x13\xdf\xf2\x62\xb9\x9f\x25\xb3\x57\x0b\x78\xff\xfc\xc9\x2c\x57\x8f\x89\x17\xfb\xb8\x67\x07\x6c\xe8\xad\x98\xdf\xb5\xf3\xd7\x22\xb4\x76\x7b\x89\x6e\x3c\xfe\x56\xd4\xa8\x03\x1d\x96\x17\xb3\xe4\xb0\xbc\x48\xce\xb4\xcb\x69\x29\x65\x72\x5a\xd9\xff\x04\x00\x00\xff\xff\x50\xaf\x5e\xea\xc3\x05\x00\x00")

func albumUploadTplBytes() ([]byte, error) {
	return bindataRead(
		_albumUploadTpl,
		"album-upload.tpl",
	)
}

func albumUploadTpl() (*asset, error) {
	bytes, err := albumUploadTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "album-upload.tpl", size: 1475, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _albumTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4b\x8f\xdc\x44\x10\x3e\xcf\xfc\x8a\xa2\xb5\xe4\x42\x3c\x9e\x24\x08\x45\x3b\x76\x4b\x88\x10\x11\x29\x82\x48\x09\x07\x4e\xa8\x6c\xf7\xd8\xbd\xdb\x6e\x9b\xee\xf6\x64\x56\x96\xa5\x70\x80\x28\x01\x89\x03\x11\x42\xca\x25\x80\x40\xe2\xc0\xeb\x00\x2c\x12\x84\x3f\x93\xd9\x64\xff\x05\x6a\x3f\x66\x3c\x8f\x4d\xc2\x5c\xa6\xbb\xab\xba\x1e\x5f\x55\x7d\x6e\xef\x95\x2b\xef\xbd\x75\xeb\x83\x1b\x6f\x43\x62\x52\x41\x87\x9e\xfd\x03\x81\x32\xf6\x09\x93\xc4\x1e\x30\x8c\xe8\xd0\x4b\x99\x41\x08\x13\x54\x9a\x19\x9f\xbc\x7f\xeb\xaa\x73\xd9\x4a\x0d\x37\x82\xd1\xa7\x0f\x8f\x17\x9f\x7e\xee\x94\x65\x98\xc9\x29\x8f\x81\xdc\x34\x8a\xcb\x98\x00\x89\x45\x16\xa0\xa8\xb5\x08\x10\x52\x55\x9e\xdb\x5c\x19\x96\xa5\x61\x69\x2e\xd0\x30\x20\x5c\x86\xae\x75\x30\x32\xb9\x20\x30\xaa\xaa\xa1\x27\xb8\x3c\x84\x44\xb1\xa9\x4f\x5c\x6d\xd0\xf0\xd0\x3d\xd0\xae\xe0\x71\x62\x82\x6c\xee\x86\x7a\xb5\x19\xa5\x5c\x8e\x42\xad\x09\xa4\x2c\xe2\xe8\x13\x14\x82\x80\x62\xc2\x27\xda\x1c\x09\xa6\x13\xc6\x0c\x01\x73\x94\x33\x9f\x18\x36\x37\x6e\xad\xec\xd2\xa1\xe7\xb6\xd9\x05\x59\x74\xb4\x1d\x92\x15\xf6\x42\x8a\xf8\x0c\x42\x81\x5a\xfb\x24\xcc\xa4\x41\x2e\x99\x22\x74\x08\xd0\x97\xa8\xec\x36\xb1\x96\xf8\x14\xf6\x46\x5c\x5f\xcf\x62\x2e\x61\xeb\xb6\x70\x44\xec\x5c\x86\xbc\x10\xc2\x51\x36\x0d\x02\x75\xa8\x3e\x49\x51\xc5\x5c\x3a\x41\x66\x4c\x96\xee\x5f\x18\xe7\xf3\x89\xc5\x79\x9a\xa9\xb4\xbb\x6e\xd7\x8e\x66\xa8\xc2\xc4\x8a\x36\x0c\xcf\xb5\x73\xd1\x1e\x63\x87\x1e\x8a\xa0\x48\xdd\x22\x17\x19\x46\x04\x0c\xaa\xd8\x56\xf0\xc3\x40\xa0\x3c\x24\xdd\xcd\xc0\x48\x08\x8c\x74\x74\x11\x86\x4c\x6b\x42\xe1\x35\x78\x72\x7c\xff\xc9\xdf\x8f\x16\x0f\x1f\x3f\xbd\x77\xd7\x73\xd1\xc2\x15\xf1\xd9\x4e\x8f\xaf\x5b\x1c\x86\xe0\x69\x26\x58\x68\x40\x62\xca\x2c\xf8\x68\x0a\x4d\xd6\xc2\xb6\xc0\xa9\x4c\xd4\xb0\xd9\x9f\x97\xe5\x86\x67\x12\x66\x28\x0a\xe6\x13\x42\x4f\xef\xdc\x3b\xf9\xec\xc7\xa7\xf7\xff\x38\xb9\xf3\xb1\xe7\x36\xd2\x33\x94\xc7\x84\x2e\x7e\xfb\xe2\xd9\x83\x7f\x5e\xa0\x77\x81\xd0\x93\x9f\xbe\x5b\x1c\x1f\xaf\xeb\x79\x6e\x13\x2d\x1d\x0e\xda\xc4\xea\xd3\x5e\x72\x5c\xe6\x85\x71\x62\x95\x15\xf9\x2a\xe0\xfa\xb0\xd7\x4c\xa4\xcd\xb6\xed\xf1\x5d\xc9\x42\x2e\x30\x64\x49\x26\x22\xa6\x7c\xf2\xec\x97\x3f\x9f\x3d\xfe\x72\xf1\xc9\xf7\x27\x8f\xee\x9e\x7e\xfb\xf5\xca\xb2\xce\x51\xee\x70\xed\x04\x46\x2e\x95\x00\xbc\xa0\x30\x26\x93\x9b\x85\xcb\x15\x4f\x51\x1d\x75\x6d\xae\x8b\x20\xe5\x86\xd0\x9b\x75\x9b\x78\x6e\x73\x69\xe9\xca\xb5\xbe\x3a\x18\xea\xdc\x07\x9e\x6b\x63\xae\xdb\x79\x47\x99\x05\x43\x35\xe5\x73\x42\x5b\x61\x59\x32\x19\x55\xd5\x70\x50\x96\x0a\x65\xcc\x60\xef\xf0\xfc\xde\x0c\xf6\x7d\x18\xa1\x08\xaa\xaa\x36\x3d\x1c\x6c\xb6\x8a\x4e\x9d\x37\xc0\x2e\xd2\xa8\xe9\x99\x2e\xa9\x9e\x9e\x49\x8a\x34\x90\xc8\x45\x4f\x0e\xb0\xec\xe7\xb2\xdc\x9b\x8d\x6e\xf0\xd0\x14\x8a\x55\x15\x81\x08\x0d\x3a\x1d\x15\xf8\x84\xcd\x31\xcd\x05\x73\xb4\x1d\xf9\x5a\x56\x17\xa6\xbd\x77\xb3\x48\x2d\x4a\x55\x45\xa8\xc7\xd3\x18\x50\x98\x56\x72\xcb\x6a\x59\x7b\xed\x1c\x26\xcc\x9a\xdc\x87\x8b\x63\x3b\x82\x70\x9b\x47\x26\xd9\x87\x0b\xe3\xf1\xab\x13\x88\xb8\xce\x05\x1e\xed\x43\x20\xb2\xf0\x70\x42\x40\xab\x70\x2b\x30\x5a\x8f\x4c\x2f\x81\x3e\x14\x58\xf7\xe1\x5a\x82\x00\x5e\x72\x89\xf6\x63\xf1\xdc\xe4\xd2\x86\x46\x4e\xcb\x52\x17\x81\x36\x0a\x56\xd9\xc0\x18\x2e\x8e\xab\xea\x9c\x0c\x74\x3e\xf1\xdc\x9c\x0e\x07\x83\xc1\x36\x03\x6d\x18\x5a\x02\x7a\x80\x33\xd4\xa1\xe2\xb9\xd9\x9f\x6c\xf1\x41\xdb\x56\x70\xa0\x9d\x9a\x47\x1c\x16\xf1\x0e\x58\x1e\xb5\x49\x5f\xbb\xb2\x2c\x44\x1f\xec\x25\xa4\xb5\x44\x37\xc1\x6e\x15\xa2\x95\xd6\x5c\xd1\x09\xeb\x8d\xc5\xf0\xc9\xbf\x3f\x9f\x3c\xf8\xcb\x22\x09\x2f\x17\x6f\xc4\xa6\x58\x08\x43\x68\x93\xff\xca\x56\xc3\x00\x65\xc9\x84\x66\x55\xd5\xf0\x46\xdb\xc4\xd6\xbc\x85\xad\xeb\xe9\x1e\x4c\x2b\x5e\xd8\xda\x36\x9b\x41\xbd\xeb\xdf\x6c\x0f\xf8\x14\x46\x39\xc6\x5c\xa2\xc9\xd4\xe8\x1d\xd4\x37\x30\x66\xda\x4e\xcc\x73\xe7\xaa\xb6\x5c\x88\x4e\xde\x5a\xb0\x64\xb6\x5a\x2e\xdb\x66\x97\x17\xc5\x66\xcb\x14\x3c\xc1\x69\x6f\x6e\x7a\x9a\x36\x98\xeb\x5c\x1e\x5e\xe5\x4a\x1b\x0b\xf4\xe9\x0f\x5f\x9d\x7e\xf3\x7b\x83\x84\xe0\xf4\xa5\x0d\x34\xfe\x08\x3d\x27\xf0\xa3\x22\x9b\x6c\x1a\xe8\xf0\x5e\xd9\xeb\x32\x8b\xb8\xc6\x40\xb0\x88\x50\x0f\xcf\xf6\xbe\x53\xfb\x6c\x5f\xbd\xf2\x2d\x79\x89\xcb\x88\xcd\xcf\xc3\x5e\x8e\x31\xab\xf9\x69\x3d\x09\x5d\x55\xd6\x51\x3b\x2e\x2b\xd9\x35\xfd\x66\x68\xf8\x8c\xd9\x4f\x7f\x17\x05\xd6\x27\xa4\x75\x44\xd7\x38\x69\x07\x36\x8d\x4f\x8b\x4e\x59\xb6\xcb\x1e\x27\x3c\x2f\xf4\xad\xb2\xbe\xcb\xe6\xe6\x7f\x94\xb5\x51\x27\xf4\x9c\xda\x89\xd4\x8b\x0d\x5c\xc7\xa6\x2d\x16\xbf\x3e\xde\x51\x98\x97\xac\xea\xd9\xde\x77\xaa\x9f\xe9\x6b\x09\x8d\xe7\x16\x82\x6e\x0c\x5c\xf7\xb1\xea\x3e\x4b\xeb\x2f\xb8\x69\x96\x99\xde\x0b\xae\xa1\x8d\x86\xae\x77\xbd\x2a\x0f\x36\x1e\x95\x07\x7a\xed\xd9\xb8\x62\x1e\x3b\xaf\xcd\xca\xba\x6e\x5e\x8f\x9e\xdb\x3c\xa1\xff\x0b\x00\x00\xff\xff\x6d\xb7\x60\x14\x53\x0b\x00\x00")

func albumTplBytes() ([]byte, error) {
	return bindataRead(
		_albumTpl,
		"album.tpl",
	)
}

func albumTpl() (*asset, error) {
	bytes, err := albumTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "album.tpl", size: 2899, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _articleDetailTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\x1c\xb7\x11\x7f\xd7\xa7\x60\x59\xc1\x92\x50\xdd\xed\x49\xb2\x0d\xfb\xb4\xbb\x45\x2b\xdb\xa8\x51\xd5\xb5\x2b\xf9\xa1\x30\x0c\x81\xbb\xe4\xed\x52\xe2\x92\x6b\x92\x7b\x27\x79\x7d\x05\x0a\xb4\x86\xfa\x50\xb8\x05\x02\x27\xc8\x9b\x91\xc0\x41\x12\x44\x51\x80\x18\x70\x04\xc7\xf9\x32\x3e\x59\x7e\xf2\x57\x08\xb8\x7f\x4e\xbb\x77\xa7\xb3\x0d\x24\x4f\x47\x72\x66\x7e\xc3\xf9\xc3\x99\xd9\xb3\x7f\x73\xe5\xaf\x6b\x9b\x7f\xbf\x79\x15\x84\x3a\x62\xee\x8c\x6d\x7e\x00\x43\x3c\x70\x20\xe1\xd0\x1c\x10\x84\xdd\x19\x3b\x22\x1a\x01\x3f\x44\x52\x11\xed\xc0\xdb\x9b\xd7\x1a\x97\x0c\x55\x53\xcd\x88\x9b\xa6\x4d\x24\x75\x73\xd3\x6c\xfa\xfd\x46\x9a\xfa\x82\x77\x68\x00\xe0\x86\x96\x94\x07\x10\xc0\x80\x09\x0f\xb1\x8c\x1b\x02\x08\xfb\x7d\xdb\xca\x45\x0b\x64\x8e\x22\xe2\xc0\x1d\xb2\xd7\x13\x12\x2b\x08\x7c\xc1\x35\xe1\xda\x81\x75\x68\x58\xe7\xc7\x44\xf9\x92\xc6\x9a\x0a\x3e\x2e\xb2\x91\x44\x11\x92\x7b\x99\x50\x9a\x6a\x12\xc5\x0c\x69\x02\x20\xe5\xbe\x65\x30\x9a\x3a\x66\x10\x34\xfb\xfd\x19\xdb\x2a\x8c\xf4\x04\xde\x1b\x67\x36\xc4\x0a\x33\xa6\x5d\xe0\x33\xa4\x94\x03\x8d\x4a\x44\x39\x91\xd0\x9d\x01\xa0\x4a\x91\xa2\x97\x9d\xd5\x4f\xeb\xfc\xa3\xd4\x18\x05\xa4\x61\x94\x55\xe8\x00\xd8\xe1\xd2\x88\x7f\x87\xa4\xba\xb8\x87\x55\x88\x24\xf1\x12\xad\x05\xf7\xc4\x2e\x88\x13\xc6\x1a\x92\x06\xa1\x86\xae\x8d\x40\x28\x49\xc7\x81\xbf\x85\x15\xfe\xad\x48\x48\x02\x01\x46\x1a\x35\xfc\x08\x3b\x30\xdb\xbb\xb6\x85\xce\x12\xb8\x77\x5f\xf0\x9a\x44\x71\x90\x05\xd3\x81\x83\xfd\x87\xaf\x8e\xbe\x1e\xec\x1f\xde\xba\xf5\xfa\xcb\xa3\x37\x1f\x7f\x3f\x15\x4c\x2b\xca\x51\x15\xac\x38\x18\x05\x3b\x7e\x7c\x78\xfc\xec\xab\xc1\xcb\x83\xc1\x7f\x3f\x9d\x0a\xd8\x23\x74\x97\xf2\x2a\x62\x79\x32\x0a\x39\x78\x79\xf0\xea\xa7\x27\x05\x98\x85\x69\xb7\xe2\x70\x2b\x5c\x1a\x86\xa7\x4a\xaa\x3a\x9b\x11\x84\xa1\x3b\x9a\x69\x63\xec\x6e\x9a\x2a\x2d\x97\xb3\x47\x95\xb1\xae\xe5\x49\x5a\x63\xad\x2e\x27\x27\x0b\x48\x53\xda\x01\x4d\x5f\x44\x6a\x18\x7e\x3b\x5c\x29\x39\x11\x23\x52\x37\x54\xe2\xfb\x44\x29\x10\x23\xac\xbd\xa5\x16\x74\x4f\xbe\xfd\xd7\xc9\xc1\xd1\xcc\xa4\x5c\x99\x9c\x1a\xbe\x88\x22\xc2\x35\x74\x8f\xf7\xff\x7f\xf2\xf4\x9f\xb9\xfc\x98\x87\x6c\x2b\x5c\x29\xd7\x69\x2a\x11\x0f\x08\x98\xdd\x59\x9c\xed\x82\xb6\x33\x7a\xc7\x8a\xca\x88\x60\x8a\xaa\x79\x3d\x4a\x6b\x30\xd2\xd1\xd0\x05\xc3\xfb\xa4\xe9\x6c\xb7\x79\x5b\xd2\x7e\x7f\x18\xbf\xec\xe8\x06\xf5\x77\xcc\xfb\xcf\xce\x91\x0c\x4c\x41\xda\xf2\x18\xe2\x3b\x46\x9a\x46\x41\x1d\x56\x78\xdb\xc4\xd7\x10\x20\xa6\x27\x00\x28\xbd\x67\x80\x7b\x14\xeb\xb0\x0d\x2e\x9e\x8f\x77\x57\x41\x48\x8c\x67\x8a\x1d\x04\x4a\xfa\x46\x10\x75\x91\x46\xd2\xc8\x64\xe9\x15\x0a\x86\x89\x6c\x48\xc2\x31\x91\xc4\x24\xaf\x4c\x88\xb9\x80\x85\x5c\x30\x9a\x52\x63\xb6\x9a\x4a\x53\x71\x86\x09\xe7\xf9\x3a\x87\x29\x04\xa6\x76\xba\x23\x57\x06\xb6\x8a\x11\x1f\xe6\x21\xf2\x88\xa9\xd7\x1e\x61\x0d\xca\x3b\xa2\xf6\xe8\xdf\xbe\xd8\x4f\x53\x8c\x34\xd9\x8a\x42\x30\xdb\x6d\xae\x49\x82\x34\xc1\xfd\xfe\xdb\x17\xff\xb1\x2d\x03\xe3\xda\x56\x78\xde\x1d\x29\x28\x26\xdd\x0c\x77\x99\xaa\x15\x32\xc8\x33\x71\xb6\x49\xd5\xba\x08\x28\x07\x23\x54\x3b\x9e\x94\x61\xb9\x10\xb9\x67\xee\xb0\xa1\x91\x4e\x14\x68\x19\x43\xca\x40\x6f\xa3\x2e\xca\x0b\x79\x7b\xf5\xf4\x3d\x6b\x0e\x3c\xcd\x1b\xd8\x24\x98\xcc\x96\xbb\x0a\x6c\xab\x46\x91\xa5\x0d\x95\x21\x15\xd1\xc8\x37\x0e\x5c\x2a\xf6\x14\x17\xb1\xbe\x7e\xc5\x34\x80\xe3\x6f\x3e\x1b\x3c\x7f\x9e\x85\x26\x4d\x09\x53\xe4\x57\x52\xdf\x9a\xac\x7e\xf0\xdd\xa3\x93\x8f\x7e\x2c\xd5\x73\x6c\xb4\x5b\xb1\x3b\xe2\xd8\x92\x30\x52\x8d\x6a\x4f\xaf\xb2\x29\x04\x26\xee\x66\x2a\xc1\x6a\xc6\x28\xa0\x1c\x69\x21\x9b\x7f\x42\xea\x26\x0a\x48\xe5\x81\x26\xac\xd2\x7d\x0c\x17\x15\x1c\x9c\x2e\x2b\x29\x3a\x09\x4b\x92\x6e\x25\x01\x6c\x46\xdd\xca\xe3\xad\xf0\x1a\xa5\xeb\x94\xef\x5c\xa3\x52\x69\xe3\x90\x37\x4f\x1f\xbf\x79\xf2\x2c\x2f\x2d\x8c\xba\x1f\x00\x91\xeb\x84\xee\x39\x86\xee\x25\x62\x75\x1c\xa2\x8c\x6f\x15\xb3\xb4\x11\x53\x85\x3c\x46\xb0\x29\x7a\xd3\xee\x30\x91\x7f\x9a\xc6\x8a\xeb\x2b\x45\x91\x72\x4c\x76\x17\xc1\xac\x69\xec\x59\x71\xac\x9b\xa3\x4c\xb4\x19\x2d\x5e\xd4\x29\xed\xba\xfa\x83\xaf\x69\x97\x98\x71\x63\x58\xe2\xb3\x13\x58\xa8\xaa\x17\xc9\x09\x5e\xca\x75\x1a\x3f\xa5\x69\xb1\x34\xf7\xae\x64\xd5\x74\x03\xc6\x42\x7d\x83\xec\xea\x0f\x0a\x75\x2e\x00\xdd\x73\xf2\x0c\xaf\xbd\x1b\x62\x1d\xe5\xc9\x32\x38\x7c\x39\x31\x50\xef\x1d\xe9\x69\x77\x98\x28\x30\x45\x63\xc5\x51\xb6\x95\xb0\xc9\x8f\xf1\xdd\xbd\xb9\xd6\x61\xcb\x71\x76\xd8\x7f\x73\xcd\xa7\x6d\xd6\xee\x08\x19\x81\x88\xe8\x50\x60\x07\xc6\x42\x69\x08\x4c\x89\x29\x6b\x91\x21\x9f\xd1\x5a\x0d\xa9\x11\x48\x91\xc4\xf5\x76\x93\x37\x8e\x8e\x90\x0e\xe4\x45\x6f\x81\xee\xf1\x27\xcf\x5e\x7f\x71\x68\x5b\x19\xb1\xc6\x4e\x79\x9c\x68\xa0\xf7\x62\xe2\x40\x4d\x76\x35\xac\xe1\x9b\x51\x45\x0a\x96\x5f\x6a\x08\x57\x58\x75\xba\x8f\x19\xf2\x49\xde\x37\xab\xc7\x5d\xc4\x12\xe2\x40\x78\x46\xd1\xfb\x60\x7b\x12\x49\xa1\x7b\xfb\x6f\xeb\xef\xb2\x23\x91\x6c\x8a\x19\x06\xa5\xb0\x20\x5b\xd6\x2e\x1f\x6a\x1d\xb7\x2d\xeb\x97\xbf\x7b\xf1\x11\x03\xdd\xc1\xc3\x7f\x0f\x0e\x7e\x98\x64\x82\x71\x3f\x92\x04\x9d\x7d\xf5\x12\x64\x98\x56\xc5\xb6\x66\xc2\x5a\x79\x5a\x4c\x40\xc5\xd0\xb3\xb4\xdc\x32\x43\x8f\x6b\x5b\xa5\x9e\xb3\x4d\xab\x3a\x33\xa4\x18\x13\x5e\xaa\x44\x52\x53\x9f\x91\x2d\x8a\x87\x2e\x2a\x66\xe5\xbc\x21\xbe\x0f\x46\x5d\xd6\x17\xd1\x98\x6c\xfe\xa9\x53\x08\xab\xc4\x8b\xa8\x1e\xeb\xdf\xb1\xa4\x66\x36\x87\xee\xf1\xa3\xff\xbd\x3a\xfa\xbc\x9c\x69\x73\xd1\xd3\xbe\x6a\x9c\x38\x32\x8d\x17\x8b\xe2\x67\xf4\xa3\xb0\x23\x84\xae\x7c\x14\xe6\xf3\x83\xdb\xa3\x1c\x8b\x5e\x73\xcb\xc3\x5b\xd9\xc7\xd8\x56\xfe\x21\xec\xa4\xd9\x53\x15\x1c\xb6\x53\xe8\xe1\x0d\xae\xfe\x4c\xf6\x60\x3b\xed\x2f\x42\x0f\x6f\x9a\xe7\xd4\x86\xd0\xac\xff\x42\x39\x85\x6d\xb8\x3c\xdc\xac\x53\xa5\x61\xbb\x83\x98\x22\xe6\xe8\x26\xf5\x4b\xd6\x0d\x13\x36\xd8\x86\xad\x7c\x47\xef\x9b\xcd\xca\x32\xec\x2f\xc2\x4c\xb5\x81\xef\xaf\xf6\xa8\x0e\xe7\xb1\xf0\x13\x53\x27\x16\x5a\x77\xe6\x03\xa2\xaf\x32\x62\x76\xea\x8f\x7b\x9b\x28\xb8\x81\x22\x32\x3f\x67\x86\xcd\xb9\x85\x3b\xad\xbb\x0f\x1e\x98\xc9\x74\xa1\x89\xe2\x98\x70\xbc\x16\x52\x86\xe7\xfd\x6c\x6c\x2c\xa4\xe6\xe7\x72\x53\xe7\x16\x16\x9a\x66\x30\x9e\x2b\x9e\x82\x87\x69\x14\x34\x33\xcd\x4d\x0f\x51\x9c\x98\x88\x59\x66\x2e\xa2\xbe\x85\x62\x6a\x6d\x2b\x2b\xa7\x6e\xab\xdf\x77\x9d\x4b\x97\x2f\x5d\x6c\x5d\xb8\xbc\x62\x76\x3e\xe6\x5d\x22\x15\x15\xdc\x99\xfb\xdd\x3f\xe6\x1b\x9c\xf4\xc0\x15\xa4\xc9\xfc\x82\xb5\x72\x91\x5c\x58\xb8\xbb\x6a\x5b\x85\x7f\x67\x6c\x2b\xff\x46\xb7\xad\xfc\xff\x8a\x9f\x03\x00\x00\xff\xff\x4d\x6a\x29\x11\xc0\x10\x00\x00")

func articleDetailTplBytes() ([]byte, error) {
	return bindataRead(
		_articleDetailTpl,
		"article-detail.tpl",
	)
}

func articleDetailTpl() (*asset, error) {
	bytes, err := articleDetailTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "article-detail.tpl", size: 4288, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _articleFormTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x96\x4d\x8f\xdc\x34\x18\xc7\xcf\x9b\x4f\x61\x1e\x38\xcc\x48\x9d\xc9\x56\x48\x08\xcd\x26\x91\xda\x6d\x2b\x41\xa9\x40\xec\xee\x81\xa3\x13\x3f\x99\x98\x71\xec\xe0\x3c\xd9\xed\x28\xca\x47\x40\x08\x09\x71\xe0\x08\x67\x90\xb8\xf5\x00\x7c\x9b\x85\x7e\x0c\xe4\xbc\xcd\x64\x5f\x7a\xe8\xee\x9e\xec\xe7\xed\xef\xe7\x17\xdb\x49\x82\x0f\x9e\x7d\x79\x7c\xfa\xcd\x57\xcf\x59\x46\xb9\x8a\xbc\xc0\x0d\x4c\x71\xbd\x0e\x01\x35\x38\x07\x72\x11\x79\x41\x8e\xc4\x59\x92\x71\x5b\x22\x85\x70\x76\xfa\x62\xf1\xa9\x8b\x92\x24\x85\xd1\xe5\xf7\xbf\x5c\xfe\xf1\xeb\x7f\x7f\xfd\xfc\xf6\x9f\x1f\x17\x75\x9d\x18\x9d\xca\x35\x83\x13\xb2\x52\xaf\x81\xc1\x5a\x99\x98\xab\x36\x17\x18\x40\xd3\x04\x7e\x57\xe8\xd5\x35\x61\x5e\x28\x4e\xc8\x40\xea\xc4\x77\xcb\x2c\xa9\x50\xc0\x96\x4d\xe3\x05\x7e\xbf\x7a\x6c\xc4\xf6\x7a\xb2\x0b\xee\x25\x0b\x79\xce\x12\xc5\xcb\x32\x84\xc4\x68\xe2\x52\xa3\x85\xc8\x63\x6c\x3f\x62\xcd\x45\xeb\x63\x2c\x48\x8d\xcd\x59\x8e\x94\x19\x11\x42\x61\x4a\x02\x26\x45\x08\xdc\x92\x4c\x14\x2e\x5c\xb8\x4f\x9d\x4a\xb8\xc0\x62\x6d\x4d\x55\x8c\x61\xc6\x02\xc5\x63\x54\x2c\x35\x36\x84\x0e\x34\x3a\x75\x43\x5d\x2f\xcb\xd2\x01\xb7\xf1\xbd\x7c\xa9\x8b\x8a\x18\x6d\x0b\x0c\x81\xf0\x35\xc1\x44\xde\x01\x58\xa3\xba\x8e\xfa\x07\xa7\x79\x8e\xa3\x51\x28\x9e\x60\x66\x94\x40\x1b\x42\xac\xcc\x9a\xf5\x81\x73\xae\x2a\x0c\xa1\xae\x97\xdc\xd2\xb2\xed\xa1\x69\x76\x1c\xbe\x90\xe7\xef\x05\x55\x59\x09\xd1\xd9\xd7\x5f\xbc\x9b\xa4\xb2\xea\x1d\x20\x4e\xa3\xc7\x68\xa7\x13\x88\x8c\xa8\x58\xf9\xfe\x55\x82\x33\x2b\xef\xa5\x7f\x5e\x51\x66\x2c\x44\x4f\xda\xf1\x4e\xfb\xd1\x4b\xf5\x24\x83\x35\x81\x79\xd2\x3b\xa7\x2c\x9d\xf7\x5e\x70\x36\xb8\xbd\x30\x56\x94\x10\x0d\xb3\x3b\x21\x8d\x72\x3d\xd4\xce\x9e\x60\xbd\x1c\xdd\x53\xb0\xc1\x7f\x2f\x68\x65\x95\xe7\xdc\x6e\x21\x3a\xe9\x26\xd7\xc1\x1c\x0c\xb7\xc8\x6f\xe7\x19\x34\x7a\x9c\xd1\x9c\xd0\x9c\x0c\xde\x92\xb6\x0a\x43\xc8\x50\xae\x33\x5a\x7d\x72\x58\xbc\x3e\x82\xa8\x47\xeb\x93\xda\x77\x56\xbf\xec\xdd\x11\x5d\xaf\xa8\x09\xa2\xe3\x6e\xf2\x3e\x88\xee\xd2\xf7\xe5\x03\xe6\x20\x3b\xc5\x1c\x93\xa6\x98\x1f\x1f\x4e\x38\xfb\xac\x07\xe2\x3c\x21\x4e\xd5\x0d\x47\xb4\xcb\x1d\xde\xcd\x5c\x48\xb3\x90\x5a\x49\x8d\x70\xcb\x39\x6e\x73\xc6\x6d\x6d\x55\xc7\xc3\xf8\x18\x58\x5d\xcb\x94\xe1\x77\xac\xdb\xba\x36\xcc\x1e\x37\x4d\x92\x61\xb2\x41\x51\xd7\xa8\x45\xd3\xec\xa4\xff\xfd\xfd\xb7\xcb\x37\x6f\xd8\x03\xf7\x75\x78\x73\x5f\x87\xb7\xf7\x75\xf9\xe7\x0f\x6f\x7f\xfa\xfb\x6a\x5f\xd3\x7d\xd8\x5f\x3d\x93\x42\xa0\x1e\x96\x97\xe2\xea\xfd\xfc\xec\x59\xd3\x00\xf3\xc7\xda\xb8\x22\x32\xba\x2f\xee\x0c\x60\x46\x1f\x2b\x99\x6c\x9c\x5a\x49\xc6\x6e\x97\x31\x4f\x36\xb3\xf9\xd1\xf8\xda\x88\x49\xb3\x98\xf4\x42\x60\xca\x2b\x45\x10\x3d\xe5\xc9\x26\xf0\xbb\xfa\x9b\xb5\xcb\x2a\xce\x25\x5d\x53\x28\xac\x1c\xae\xb8\x8b\x4f\x35\x02\xdf\x9d\xab\xf6\xc3\xdd\x01\xf7\xc3\xd5\xcf\x7f\x6a\x0c\xed\x7d\xfe\xcb\xc4\xca\x82\x58\x69\x93\x10\x7c\xb7\x03\x32\xf1\x37\x28\x24\x19\xeb\x6f\xa4\x16\xdd\x74\x91\x4b\xbd\xfc\xb6\x84\x28\xf0\xbb\x82\x68\xa8\x8c\xbc\x8f\x66\x69\xa5\x13\x92\x46\xcf\xe6\xb5\x77\x70\xce\x2d\xeb\x8a\x58\xc8\x5e\x4a\x2d\x9e\xb7\xc6\x32\xb1\xc8\x09\x67\xf0\xe1\xfe\x0d\x7c\xc4\x6a\xef\xc0\x75\x5f\x15\xca\x70\xf1\x79\x69\xf4\x8a\x81\xdf\x59\xf0\xa8\x8b\xa5\x52\xe1\x2b\xae\xf9\x1a\xed\x90\x10\x1b\x6e\xc5\xd8\xa7\x4b\xc8\xbb\x84\xa1\x86\x2b\x65\x2e\x5e\xec\x0a\x57\x8c\x6c\x85\x3b\x41\x42\xfb\xca\x08\x64\x2b\x96\x72\x55\x0e\x01\x9e\x12\xda\xa7\xaa\xb2\x2b\xb6\xc7\x44\x99\x2c\x97\xe5\x56\x27\xb3\xf9\x51\xe3\x1d\x34\xf3\xa3\x03\xaf\x99\x7b\x7b\x8f\xc2\xef\xfe\xb4\x02\xbf\xfb\x1d\xfc\x3f\x00\x00\xff\xff\x2d\x48\x86\x60\x1f\x0a\x00\x00")

func articleFormTplBytes() ([]byte, error) {
	return bindataRead(
		_articleFormTpl,
		"article-form.tpl",
	)
}

func articleFormTpl() (*asset, error) {
	bytes, err := articleFormTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "article-form.tpl", size: 2591, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _articleTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4b\x8f\xdc\x44\x10\x3e\x8f\x7f\x45\x53\x1a\xe5\x42\x3c\x0e\x68\x0f\x11\xb4\x5b\x82\x84\x88\x48\xab\x10\x69\x97\x03\x27\xd4\x63\xd7\x78\x5a\xdb\xd3\x76\xba\xdb\x93\x59\x59\x96\xc2\x01\x41\xe0\xc0\x81\x08\x71\xe4\x21\x90\x38\xf0\x3a\x00\x41\x0a\xe1\xcf\xb0\xc3\xee\x29\x7f\x01\xb5\x1f\x63\xef\x8c\x47\x09\x7b\x99\x76\xd5\xd7\xf5\xfa\xea\x5b\x9b\xbe\x74\xf3\x9d\x1b\xc7\xef\xdd\x7d\x8b\xcc\xed\x42\x32\x8f\xba\x1f\x22\xb9\x4a\x42\x40\x05\xce\x80\x3c\x66\x1e\x5d\xa0\xe5\x24\x9a\x73\x6d\xd0\x86\xf0\xee\xf1\x2d\xff\xba\xf3\x5a\x61\x25\xb2\xa2\x88\x52\x35\x13\x09\x81\x23\xab\x85\x4a\x80\x40\x22\xd3\x29\x97\x95\x1b\x08\x40\x59\xd2\xa0\xc6\x7a\x45\x61\x71\x91\x49\x6e\x91\x80\x50\x51\xe0\x22\x4f\x6c\x26\x81\x4c\xca\xd2\xa3\x41\x93\x70\x9a\xc6\xa7\xbb\x60\xe7\xec\x81\x63\xb1\x24\x91\xe4\xc6\x84\x10\xa5\xca\x72\xa1\x50\x03\xf3\x08\xe9\x7b\x74\x7a\x1f\x5c\x24\x31\x23\xe3\x89\x30\x87\x69\x22\x14\xd9\xb9\x2d\x7d\x99\xf8\xd7\x49\x96\x4b\xe9\x6b\x91\xcc\xad\x6b\x6f\x96\xea\x45\x0b\x71\x67\xdf\x20\xd7\xd1\xdc\xb9\xb6\x2e\xaf\x8c\xff\xaa\x33\x73\x32\xd7\x38\x0b\x21\xe0\xda\x8a\x48\x62\xc0\xe3\x18\x88\xe5\x3a\x71\x73\x7b\x7f\x2a\xb9\x3a\x81\xf6\xe2\xd4\x2a\x32\xb5\xca\x37\x79\x14\xa1\x31\xc0\xc8\xcb\xe4\x0e\xde\x27\x6f\xca\x34\xa1\x01\x67\x1e\x0d\x62\xb1\x1c\x4c\x76\xe0\xda\xf4\x08\x35\x28\x31\xb2\x44\xf1\x05\x86\x60\x2c\xb7\xb9\x81\x4b\x15\xbb\xb9\xe8\x54\x56\x53\x71\x7f\x34\xcd\xac\x48\x15\x59\x72\x99\x63\x08\xc0\x2e\x1e\x3c\x5c\x7f\xfa\xc3\xbf\x9f\xfc\xbe\x7e\xf0\x01\x0d\x6a\xef\x1e\xf0\x35\x60\x67\xbf\x7e\x76\xfe\xe8\xaf\xe7\xe0\x5e\x01\xb6\xfe\xf1\xdb\xb3\xc7\x8f\x2f\xe3\x68\x50\x57\xcb\xbc\x51\xd3\x58\x65\xed\x35\x27\x54\x96\x5b\x3f\xd1\x69\x9e\x75\x05\x57\x46\x62\x4f\x33\x0c\xc1\xe2\xca\x42\xd3\x6d\xb3\x5c\x43\xcd\x92\x4c\xf2\x08\xe7\xa9\x8c\x51\x87\x70\xfe\xf3\x1f\xe7\x4f\x3f\x3f\xfb\xf0\xbb\xf5\x57\x1f\x5d\x7c\xf3\x65\x17\xd9\x64\x5c\x0d\xa4\xf6\xa7\x56\x6d\x40\x84\xd0\x69\x6e\x6d\xaa\xb6\x49\xcb\xb4\x58\x70\x7d\x0a\x4d\x65\x26\x9f\x2e\x84\x05\x76\x54\x6d\x08\x0d\xea\x4b\x9b\x54\x81\xcb\xd5\x8e\xa1\xea\x7d\x44\x03\x57\x73\xb5\xad\x03\x34\x4b\xe4\x7a\x26\x56\xc0\x1a\x67\x51\xa0\x8a\xcb\xd2\x1b\x15\x85\xe6\x2a\x41\x32\x3e\xb9\x3a\x5e\x92\xd7\x42\x32\xe1\xda\x96\xe5\xce\x2c\x17\x18\x0b\xde\xf5\xba\xed\xf1\x9d\xc0\xfa\x5d\xce\x0f\x2e\xfb\x9d\xd4\x9c\x96\xd9\xee\x4e\xc7\x68\xb9\x90\x41\x51\x8c\x97\x93\xdb\x37\xcb\x12\x48\xc5\x45\x08\x95\xe5\xd8\x9d\xcb\x12\x58\xff\xc9\xad\xf3\xb3\x27\x1f\x17\x45\xec\xb4\x3c\x5e\x4e\x6e\x68\xe4\x16\xe3\xb2\x7c\xf6\xe4\x21\x0d\xe6\x07\xbd\x4a\xb2\xfa\xe6\x51\xbe\x70\x03\x76\x77\x33\xe6\x8d\x46\x3b\x0a\xa6\x59\x5b\x71\x5f\xb5\x15\x0c\xef\xb9\x1c\x47\x95\x1e\xc8\xb5\xb2\x6c\x39\xac\xb9\xaa\x1f\x76\x64\xd8\x30\x5a\x9d\x57\xa6\xdb\xf5\x86\xca\x86\x01\xb2\x3b\x0f\x8c\x85\xed\x4f\x63\x2b\x6e\xec\xf8\xd2\xc0\xfe\xf9\xfb\xa7\xf5\xa3\x3f\xdd\x24\x5c\x47\x2d\xa1\xed\x82\x74\x82\xe8\x8e\x7d\x4c\x63\x10\x33\x32\xc9\x78\x22\x14\xb7\xa9\x9e\xbc\xcd\xcd\x5d\x9e\xa0\x69\xf9\xcf\xe5\x66\x24\x35\xc6\xa9\xb2\x3b\x6e\xf8\x1e\x8a\xa3\x71\xd9\x95\x23\x45\xc7\x7b\x51\xf4\x90\x2e\xdd\xa1\x50\x27\xb7\x84\x36\xd6\xb1\x7c\xf1\xfd\x17\x17\x5f\xff\x56\x77\x25\x05\x7b\xe1\x00\x75\x3e\x60\x57\x24\xbf\x97\xa7\xaf\x6f\x07\x28\x0a\x94\x06\xfb\x05\xb5\x9d\xc5\xc2\xf0\xa9\xc4\xd8\x6d\xe6\xfe\xec\x83\xe8\xfd\xb9\x7a\x54\x6c\x04\x26\x54\x8c\xab\xab\x64\x9c\xf1\x04\x2b\xa1\x5d\x6e\xc2\xb8\x5d\x90\xa2\x59\xcb\xce\x77\xdb\xbc\x11\x59\xb1\x44\xf7\x8a\x6a\xab\xe0\x95\x05\x9a\x44\x8c\xf4\x46\x33\x1e\x98\x4d\x9d\xb3\xd1\x50\x7d\xac\xde\x07\xed\xae\xec\x2f\x7d\x87\xd6\x3b\xb8\xb2\xff\x83\xd6\x1a\x0e\xec\x8a\x1e\x9c\xd4\xf3\x03\x1c\xf2\x7a\x2d\xce\x7e\x79\x3a\x40\xcc\x0b\xb2\xba\x3f\xfb\x20\x7c\x6f\xae\xcd\x68\x68\x90\xcb\x6d\x49\xb5\xff\x75\xdb\x9f\xfa\x8b\x83\x06\xf5\x97\xd0\x7f\x01\x00\x00\xff\xff\x71\xb6\x35\x5e\x1a\x09\x00\x00")

func articleTplBytes() ([]byte, error) {
	return bindataRead(
		_articleTpl,
		"article.tpl",
	)
}

func articleTpl() (*asset, error) {
	bytes, err := articleTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "article.tpl", size: 2330, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _incFootTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\x41\x0a\x42\x21\x10\x80\xe1\x7d\xa7\x18\x3c\x80\x73\x81\xd7\xbb\x8b\xe9\x18\x23\xe6\x98\x33\x05\x21\xde\xbd\x45\xad\x82\xa0\xf6\xff\xcf\x37\x27\x24\xca\xdc\x08\x1c\xb7\x88\x59\xc4\xbc\xf5\xea\x60\xad\xc3\xa6\x71\x70\x37\xd0\x11\x8f\x0e\xd5\x82\x71\xc4\xa2\x58\xae\x37\x1a\x0f\x7f\xe1\xe6\x8b\xba\x7d\xc3\x57\xb7\x7f\x1d\x4e\x22\xa6\x36\x42\xff\xe3\x79\x23\xf7\x50\x39\x05\xa3\x5f\xa5\x2a\xe7\x8f\x74\x4e\xa0\x96\x60\xad\x67\x00\x00\x00\xff\xff\x45\x2a\x90\xac\xeb\x00\x00\x00")

func incFootTplBytes() ([]byte, error) {
	return bindataRead(
		_incFootTpl,
		"inc/foot.tpl",
	)
}

func incFootTpl() (*asset, error) {
	bytes, err := incFootTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inc/foot.tpl", size: 235, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _incHeadTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x8e\x9b\x40\x0c\x3d\x6f\xbe\xc2\x9d\xf6\x4a\x38\xf5\x36\x20\x6d\x4f\x7b\xd8\x5b\xbf\xc0\x30\x86\x58\x72\x3c\x68\x18\xd0\xae\x10\xff\x5e\x0d\x04\x92\xb2\x8a\x7a\xe9\xc9\x19\xfb\x3d\xbf\x67\x3b\x4c\x13\x38\x6a\x58\x09\x0c\x6b\x9d\x5f\x08\xdd\x39\x76\x62\x60\x9e\x4f\x56\x71\x84\x5a\xb0\xef\x0b\xa3\x38\x56\x18\x60\x0d\x99\xa3\x06\x07\x89\xdb\xb3\xe1\x0f\x72\x59\xf4\x9d\x29\x4f\x00\xd6\xf1\x4e\xab\xbd\x46\x64\xa5\xb0\x54\xfe\xae\xdd\xc8\x49\x72\xaf\x03\xd8\x6a\x88\xd1\x2b\xc4\xcf\x8e\x0a\xb3\x3e\xcc\x81\x12\x7d\xdb\x0a\x41\xed\x45\xb0\xeb\xc9\x19\x70\x18\xf1\x96\x4e\xa2\x6b\x7e\x4b\x63\x68\x29\x16\xe6\xfb\xca\x36\x80\x81\x31\xa3\x8f\x0e\xd5\x91\x2b\x4c\x83\x92\xb0\x4b\x36\xf9\x0d\x5e\x76\x29\x53\x82\xed\x3b\xd4\xcd\x40\x1f\x32\xaf\xf2\x69\xca\xb7\x9f\xf0\x4b\x7c\x6b\xf3\x54\x3d\x80\xb8\xf6\x9a\x2d\xe4\xff\x54\xce\xd7\x35\xec\x2b\xc2\xc3\x3e\xaa\x80\xea\x0c\x5c\x02\x35\x85\xc9\x31\x44\xae\x85\x4c\xf9\x9b\xaf\x9d\xd0\xcd\x27\xa6\x3e\x8e\xc7\x87\x3b\xb0\xdb\xc7\x3c\x34\xdc\x36\xb8\xaf\xf8\x7e\x9e\x41\x1e\xb0\xdb\x1f\x40\x71\xdc\x11\x00\x56\xb8\xb4\xf8\xc5\xce\x9b\xbf\x52\xf2\x61\x73\xe1\xf2\xf4\xf2\x72\x80\x49\x35\x5c\x4d\xf9\x9a\xc2\x1d\xf5\xa4\x65\xe5\x87\x68\xca\xd7\x14\x8e\x58\x9b\x0f\xf2\x4f\xb3\xdb\xcf\xc0\xed\x25\x9a\x64\x66\x9a\xb8\x81\x1f\x67\xee\xdf\x7d\xcb\x3a\xcf\x4f\x94\xc5\xb7\x8b\xf4\xfb\x12\x1f\xa7\x99\x26\x92\x9e\xe6\xf9\xcb\x60\x92\x1a\x2e\x0c\xd6\x03\x41\xdd\x2e\x74\xb7\xfd\x78\xa5\x6f\x59\x96\x9f\x15\xc7\xfb\x41\xb2\x6c\xf9\xc4\x56\x8c\xcd\x15\xc7\xf2\x34\x4d\x40\xea\x60\x9e\xff\x04\x00\x00\xff\xff\x99\x4d\xc3\xc9\xcd\x03\x00\x00")

func incHeadTplBytes() ([]byte, error) {
	return bindataRead(
		_incHeadTpl,
		"inc/head.tpl",
	)
}

func incHeadTpl() (*asset, error) {
	bytes, err := incHeadTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inc/head.tpl", size: 973, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _incMetaTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcc\x4d\x6a\xc3\x30\x10\xc5\xf1\x7d\x4e\x31\xcc\x3a\xb1\xe9\x3e\xea\x5d\x14\xf9\xa5\x1e\x2a\x8d\x8c\xf4\xf2\x85\xf1\xdd\x8b\x43\xa1\x07\xe8\xf2\xf7\x78\xfc\xd7\x55\x26\x5c\xcd\x21\x6a\x9e\xc6\x02\xc6\x81\x4b\x56\xd9\xb6\xc3\x79\x97\x78\x2c\x08\x7a\x37\x3c\x96\xda\xa8\x92\xaa\x13\xce\xa0\x0f\x9b\x38\x87\x09\x77\x4b\x38\xbd\x71\x14\x73\xa3\xc5\x7c\xea\x29\x66\x84\x8f\xa3\x94\xf8\xb4\x72\x2b\x7f\xc3\xad\xa3\xbd\x15\x2f\x19\xc1\xab\x7e\x1e\xce\xd9\xfc\x5b\x1a\x72\xd0\xce\x57\x46\x9f\x01\xaa\xf0\xb5\x20\x28\xf1\xe4\x98\x7a\x57\x99\x1b\xae\x41\xc7\xce\x48\x4b\xfb\x34\x5e\x6a\x65\x67\x8b\xcb\x50\xcc\x87\xfd\xf4\x9f\x58\xae\x5f\xbf\x8d\x75\x15\xf8\x24\xdb\xf6\x13\x00\x00\xff\xff\xdc\xc3\xc5\xe7\x1e\x01\x00\x00")

func incMetaTplBytes() ([]byte, error) {
	return bindataRead(
		_incMetaTpl,
		"inc/meta.tpl",
	)
}

func incMetaTpl() (*asset, error) {
	bytes, err := incMetaTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inc/meta.tpl", size: 286, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loginTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\xb1\x72\xd4\x3c\x10\xc7\x7b\x3f\xc5\x7e\xdb\x3b\x9e\x49\xf5\x15\xb2\x9b\x10\x5a\x6e\x48\x28\x28\x25\x7b\xcf\xd6\x64\x25\x19\x79\x7d\x70\x73\x73\x8f\x41\xc1\x53\x50\x52\x30\x3c\x0e\x03\x8f\xc1\xc8\x27\x1f\x97\x4c\x42\x25\x59\xfb\xdf\xfd\xff\x56\x5a\xab\xff\x5e\xbd\xb9\xb9\x7f\xbf\xb9\x85\x41\x1c\x37\x85\x4a\x0b\xb0\xf6\x7d\x8d\xe4\x31\x1d\x90\xee\x9a\x42\x39\x12\x0d\xed\xa0\xe3\x44\x52\xe3\xbb\xfb\xd7\xe5\xff\x29\x2a\x56\x98\x9a\x5f\x5f\xbe\xff\xfc\xf1\xb9\x3c\x1c\xda\xe0\xb7\xb6\x07\xbc\x93\x68\x7d\x8f\x80\x3d\x07\xa3\x79\x51\x21\x20\x1e\x8f\xaa\x3a\xa5\x14\x87\x83\x90\x1b\x59\x0b\x01\x5a\xdf\x56\xc9\xe0\x4a\x46\x46\xb8\x3a\x1e\x0b\x55\x65\x5f\x13\xba\x7d\x53\xa8\xce\xee\xa0\x65\x3d\x4d\x35\xb6\xc1\x8b\xb6\x9e\x22\x36\x05\x80\xda\x86\xe8\xd6\x50\xda\x97\x93\xed\xbd\xf5\x08\xb6\xab\x91\x43\x6f\x7d\x99\x8e\x17\x31\x80\x1a\xae\x9f\x11\x97\xc9\x2c\x01\x37\xbf\xbf\x7e\x3b\x35\xa3\xaa\xe1\x3a\xa7\xb0\x36\xc4\xb0\x0d\xb1\x46\xeb\xc7\x59\x6e\x9d\xb6\x8c\x6b\x99\x29\x96\xc1\xf3\x1e\x9b\xcd\x10\x3c\xa9\x6a\x51\xe7\xcc\x45\x0e\xb2\x1f\xa9\x46\x21\x46\xf0\xda\x51\x8d\x63\x52\xe2\x23\x8e\xd4\x54\x0c\x8c\x30\xb2\x6e\x69\x08\xdc\x51\xac\xf1\x86\x98\xcb\x45\x0d\x7e\x76\x86\x22\x42\xa4\x0f\xb3\x8d\xd4\x81\x9e\x25\x6c\x43\x3b\x4f\x2f\x50\x6e\xf4\x34\x7d\x0c\xb1\x7b\x06\x34\x47\x5e\x66\x1d\xcf\xb9\x19\xf8\x69\xad\x7f\x30\xff\xf5\x5d\x51\xb3\xc1\xe5\x13\x0e\xd4\x3e\x98\xf0\x29\x3f\xca\x4a\x7f\xfe\xba\x64\x39\x6b\x61\xa7\x79\xa6\x1a\x23\x39\x4a\x77\x51\x3a\x3a\xe7\xbf\xcd\x67\xe0\x08\x1e\xb7\x55\x75\x76\x97\xb7\x66\x16\x09\x7e\x65\x30\xe2\xc1\x88\x2f\xb9\x5f\x96\x31\x5a\xa7\xe3\x7e\xd9\x1b\x0e\xed\x03\x66\xff\x69\x36\xce\x0a\x36\x77\xb6\xf7\x60\xbd\xaa\x4e\x65\x96\xd9\xab\xd2\x3d\x34\x45\x36\x79\x3a\xd1\xdb\x10\xe4\x72\xa2\xf3\x28\x57\xa7\x3f\xed\x4f\x00\x00\x00\xff\xff\xdf\xac\x4a\xe8\x7a\x03\x00\x00")

func loginTplBytes() ([]byte, error) {
	return bindataRead(
		_loginTpl,
		"login.tpl",
	)
}

func loginTpl() (*asset, error) {
	bytes, err := loginTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.tpl", size: 890, mode: os.FileMode(436), modTime: time.Unix(1541986104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".DS_Store": Ds_store,
	"404.tpl": _404Tpl,
	"about.tpl": aboutTpl,
	"album-upload.tpl": albumUploadTpl,
	"album.tpl": albumTpl,
	"article-detail.tpl": articleDetailTpl,
	"article-form.tpl": articleFormTpl,
	"article.tpl": articleTpl,
	"inc/foot.tpl": incFootTpl,
	"inc/head.tpl": incHeadTpl,
	"inc/meta.tpl": incMetaTpl,
	"login.tpl": loginTpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".DS_Store": &bintree{Ds_store, map[string]*bintree{}},
	"404.tpl": &bintree{_404Tpl, map[string]*bintree{}},
	"about.tpl": &bintree{aboutTpl, map[string]*bintree{}},
	"album-upload.tpl": &bintree{albumUploadTpl, map[string]*bintree{}},
	"album.tpl": &bintree{albumTpl, map[string]*bintree{}},
	"article-detail.tpl": &bintree{articleDetailTpl, map[string]*bintree{}},
	"article-form.tpl": &bintree{articleFormTpl, map[string]*bintree{}},
	"article.tpl": &bintree{articleTpl, map[string]*bintree{}},
	"inc": &bintree{nil, map[string]*bintree{
		"foot.tpl": &bintree{incFootTpl, map[string]*bintree{}},
		"head.tpl": &bintree{incHeadTpl, map[string]*bintree{}},
		"meta.tpl": &bintree{incMetaTpl, map[string]*bintree{}},
	}},
	"login.tpl": &bintree{loginTpl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

